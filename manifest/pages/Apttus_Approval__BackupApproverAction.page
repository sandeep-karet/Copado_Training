<!-- 
    Conga Approvals
    BackupApproverAction
     
    @2011-2021 Conga Inc. All rights reserved.

-->
<apex:page standardController="Apttus_Approval__Backup_Approver__c"
           extensions="Apttus_Approval.BackupApproverActionController"
           lightningStylesheets="{!$User.UIThemeDisplayed == 'Theme4d' ||
                                   $User.UIThemeDisplayed == 'Theme4u' ||
                                   $User.UIThemeDisplayed == 'Theme4t'}">

    <script type="text/javascript" src="/soap/ajax/55.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/55.0/apex.js"></script>

    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQuery22, 'jquery-2.2.2.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.css')}" />

    <style>
        /* hide the close box on the dialog */
        .no-close .ui-dialog-titlebar-close {
            display: none !important;
        }
    </style>

    <script type="text/javascript">
        // This to make sure jQuery doesn't conflict with any other JS libraries
        var j$ = jQuery.noConflict();

        // setup namespace
        j$.APTTUS = {};        
        
        // define dialog objects
        var confirmationDialog;

        // initialize after the document has loaded
        j$(document).ready(function() {
            
            // build the wait dialog
            buildWaitDialog();

            // initialize the confirmation dialog
            confirmationDialog = j$("#idConfirmationDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false
                
            });
            
        });

        // setup the wait panel and set autoOpen to false
        function buildWaitDialog() {
        
            j$("#idWaitPanel").dialog({
                autoOpen: false,
                dialogClass: "no-close",
                closeOnEscape: false,
                draggable: false,
                width: 300,
                minHeight: 50,
                modal: true,
                buttons: {},
                resizable: false,
                open: function() {
                    // scrollbar fix for IE
                    j$('body').css('overflow','hidden');
                },
                close: function() {
                    // reset overflow
                    j$('body').css('overflow','auto');
                }
            });
            
        };

        /**
         * Show wait dialog
         */
        function showWaitDialog(msgText) {
            
            j$("#idWaitPanel").html('<center><img src="{!URLFOR($Resource.Image_LoadingPage)}" /></center>');
            j$("#idWaitPanel").dialog("open");
            j$("#idWaitPanel").dialog("option" , "title" , msgText);
            j$("#idWaitPanel").dialog("option", "position", "center");
            
            return false;
            
        }
   
        /**
         * Hide the wait dialog
         */
        function hideWaitDialog() {
        
            // close the wait dialog
            j$("#idWaitPanel").dialog("close");

            return true;
        
        }
        
        /**
         * Callback when the activate button is clicked
         */
        function onActivateActionClick() {
        
            // show the modal panel
            var hasInEffectBackup = {!hasInEffectBackup};
            var hasScheduledBackup = {!hasScheduledBackup};
            if (hasInEffectBackup || hasScheduledBackup) {
                showConfirmation();
                
                return true;
            }
            
            // activate the approver
            invokeDoActivateApprover();
            
            // return false to allow the action to proceed
            return false;
            
        }
        
        /**
         * Callback when the activate action is completed
         */
        function onActivateActionComplete() {
        
            // hide the dialog
            hideConfirmation();
            
            return true;
            
        }

        /**
         * Show confirmation dialog
         */
        function showConfirmation() {
            
            // show the dialog
            j$("#idConfirmationDialog").dialog("open");
            j$("#idConfirmationDialog").dialog("option", "title", "Confirm");
            j$("#idConfirmationDialog").dialog("option", "position", "center");
            
            return false;
            
        }
        
        /**
         * Hide confirmation dialog
         */
        function hideConfirmation() {
        
            // close the dialog
            j$("#idConfirmationDialog").dialog("close");

        }

        /**
         * Callback when the OK button is clicked on the confirmation dialog
         */
        function onActionClickConfirmation() {
        
            // hide the add comment dialog
            hideConfirmation();
            
            // show the modal panel
            showWaitDialog("{!$Label.PleaseWait}");

            // deactivate the old approver and activate the new one
            invokeOkToActivateApprover();
            
            // return false to allow the action to proceed
            return false;

        }

	</script>

    <apex:form id="idBackupApproverActionForm">
        
		<!--<apex:pageBlock title="{!$Label.Apttus_Approval__BackupDelegateApprover}" rendered="{!NOT(isInitialized) && NOT(hasErrors)}">-->
		<apex:pageBlock title="{!$Label.Apttus_Approval__BackupDelegateApprover}" id="idBackupApproverPageBlock">
			<apex:pageMessages />
			<apex:pageBlockButtons location="bottom">
				<apex:commandButton value="{!$Label.Apttus_Approval__Activate}" 
									onclick="onActivateActionClick();"
									rendered="{!isActivateMode}"
									reRender="idBackupApproverPageBlock" />
				<apex:commandButton value="{!$Label.Apttus_Approval__Deactivate}" 
									action="{!doProcessAction}" 
									rendered="{!isDeactivateMode}"  />
				<apex:commandButton value="{!$Label.Apttus_Approval__Cancel}" 
									action="{!doCancel}" 
									immediate="true" />
			</apex:pageBlockButtons>
		    <apex:pageBlockSection title="{!$Label.Apttus_Approval__BackupApproverDetail}" columns="2" collapsible="false">
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__IsDelegate__c}" />
				<apex:outputField value="{!backupApproverSO.Name}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Current_User__c}" />
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Backup_User__c}" />
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Transfer_in_flight__c}" />
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__DelegateUserIds__c}" />
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Effective_Date__c}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__IsActive__c}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Expiration_Date__c}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__InEffect__c}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Cancellation_Date__c}"/>
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__SuppressDelegateNotification__c}" />
                <apex:outputField value="{!backupApproverSO.Apttus_Approval__Comment__c}" />
		    </apex:pageBlockSection>
		</apex:pageBlock>   

        <apex:actionFunction name="invokeOkToActivateApprover" 
                             action="{!doDeactivateExistingAndProcessAction}"
                             onComplete="onActivateActionComplete();"
                             reRender="idBackupApproverPageBlock">
        </apex:actionFunction>

        <apex:actionFunction name="invokeDoActivateApprover" 
                             action="{!doProcessAction}" 
                             reRender="idBackupApproverPageBlock">
        </apex:actionFunction>

    </apex:form>

    <!-- This panel represents the waiting dialog that will pop up -->
    <div id="idWaitPanel"></div>
    
    <!-- confirmation dialog -->
    <div id="idConfirmationDialog" style="display:none">
        <apex:form id="idConfirmationDialogForm">
            <apex:pageBlock id="idConfirmationDialogError" rendered="{!hasErrors}">
                <apex:pageMessages />
            </apex:pageBlock>
            <apex:outputText rendered="{!hasInEffectBackup}"
            				 value="Primary user {!backupApproverSO.Current_User__r.Name} already has a Backup/Delegate that is in effect. This will deactivate the existing record and set the new one in effect. Are you sure you want to continue?"
                             style="display:block; width:95%; padding:.4em;"
                             styleClass="text ui-widget-content ui-corner-all" />    
            <apex:outputText rendered="{!hasScheduledBackup}"
            				 value="Primary user {!backupApproverSO.Current_User__r.Name} already has a Backup/Delegate that is scheduled. This will activate the new record immediately as well as any ones currently scheduled. Are you sure you want to continue?"
                             style="display:block; width:95%; padding:.4em;"
                             styleClass="text ui-widget-content ui-corner-all" />    
            <p/>
            <div style="text-align:right; padding-left:4px;">
                <apex:actionRegion >
                    <apex:commandButton value="{!$Label.Apttus_Approval__Yes}"
                                        styleClass="btn btn-primary2"
                                        onclick="onActionClickConfirmation(); return false;"
                                        rendered="{!$User.UIThemeDisplayed == 'Theme3'}" />
                    <apex:commandButton value="{!$Label.Apttus_Approval__No}" 
                                        styleClass="btn btn-default2"
                                        onclick="hideConfirmation(); return false;"
                                        rendered="{!$User.UIThemeDisplayed == 'Theme3'}" />
                                        
                    <apex:commandButton value="{!$Label.Apttus_Approval__Yes}"
                                        onclick="onActionClickConfirmation(); return false;"
                                        rendered="{!$User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4u'}" />
                    <apex:commandButton value="{!$Label.Apttus_Approval__No}" 
                                        onclick="hideConfirmation(); return false;"
                                        rendered="{!$User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4u'}" />
                </apex:actionRegion>
            </div>
        </apex:form>
    </div>

</apex:page>