<!-- 
    Conga Approvals
    ApprovalContextSubmit

    @2010-2023 Conga Inc. All rights reserved.

-->
<apex:page standardController="Apttus_Approval__Approval_Request__c"
           extensions="Apttus_Approval.ApprovalContextSubmitController" 
           recordSetVar="ApprovalReqList" 
           lightningStylesheets="{!$User.UIThemeDisplayed == 'Theme4d' ||
                                   $User.UIThemeDisplayed == 'Theme4u' ||
                                   $User.UIThemeDisplayed == 'Theme4t'}">
    
    <script type="text/javascript" src="/soap/ajax/55.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/55.0/apex.js"></script>

    <apex:include pageName="Apttus_Approval__ApprovalsJSLibInclude" />
    
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQuery22, 'jquery-2.2.2.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.css')}" />
    
    <apex:form id="idApprovalContextSubmitForm">
        <style>
            /* hide the close box on the dialog */
            .no-close .ui-dialog-titlebar-close {
                display: none !important;
            }
        </style>
        
        <apex:outputPanel id="idDoReturnInternal">
            <script type="text/javascript">
                // make sure jQuery doesn't conflict with any other JS libraries
                j$ = jQuery.noConflict();      
                
                // call this once the page is ready
                j$(document).ready(function() {
                
                    // build the wait dialog
                    buildWaitDialog();
                    
                    // show the wait dialog
                    showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

                    // submit approvals
                    launchSubmitApprovals();
                    
                });

                /**
                 * Show wait dialog
                 */
                function showWaitDialog(msgText) {
                    
                    j$("#idWaitPanel").html('<center><img src="{!URLFOR($Resource.Apttus_Approval__Image_LoadingPage)}" /></center>');
                    j$("#idWaitPanel").dialog("open");
                    j$("#idWaitPanel").dialog("option" , "title" , msgText);
                    j$("#idWaitPanel").dialog("option", "position", "center");
                    
                    return false;
                    
                }
        
                /**
                 * Hide the wait dialog
                 */
                function hideWaitDialog() {
                
                    // close the wait dialog
                    j$("#idWaitPanel").dialog("close");
                    
                    return true;
    
                }
                
                
                // setup the wait panel and set autoOpen to false
                function buildWaitDialog() {
                
                    j$("#idWaitPanel").dialog({
                        autoOpen: false,
                        dialogClass: "no-close",
                        closeOnEscape: false,
                        draggable: false,
                        width: 300,
                        minHeight: 50,
                        modal: true,
                        buttons: {},
                        resizable: false,
                        open: function() {
                            // scrollbar fix for IE
                            j$('body').css('overflow','hidden');
                        },
                        close: function() {
                            // reset overflow
                            j$('body').css('overflow','auto');
                        }
                    });
    
                };
    
                /**
                 * Callback when the action button is clicked
                 */
                function onActionClick() {
                
                    // show the modal panel
                    showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");
                    
                    // return false to allow the action to proceed
                    return false;
                }
                
                /**
                 * Callback when the action is completed
                 */
                function onActionComplete() {
                
                    // hide the modal panel
                    hideWaitDialog();
                    
                    return true;
    
                }

                /**
                 * Initializes the call
                 */
                function initCall() {
                
                    try {
                        sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
                    } catch(e) {
                        ap_errorAlert(ap_cERROR_UNKNOWN,e);
                    }
                
                }
                
                /**
                 * Copies attachments to the list of email templates
                 * @param templateIds the email template ids to copy attachments to
                 * @param docIds the attachment ids to copy
                 */
                function copyAttachmentsAsync(templateIds, docIds) {
                    
                    // show the modal panel
                    showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");
                    // copy attachments
                    // delay to display progress message    
                    setTimeout(function() {
                        copyAttachments(templateIds, docIds);
                    }, 500);
                                
                }
        
                /**
                 * Copies attachments to the list of email templates
                 * @param templateIds the email template ids to copy attachments to
                 * @param docIds the attachment ids to copy
                 */
                function copyAttachments(templateIds, docIds) {
                    
                    try {
                        // STEP I - initialize the call
                        initCall();
                        // STEP II - copy attachments
                        var numTemplates = templateIds.length;
                        var numDocs = docIds.length;
                        
                        for (var i = 0; i < numTemplates; i++) {
                            // copy each attachment
                            for (var j = 0; j < numDocs; j++) {
                                ap_copyAttachment(templateIds[i], docIds[j]);
                                
                            }
                                            
                        }
                        
                        // STEP IV - submit
                        doSubmit();
                        
                    } catch(ex) {
                        // hide the modal panel
                        hideWaitDialog();
                        // display the error
                        ap_erroralert(ap_cERROR_UNKNOWN, ex);
                        // back to context object
                        doReturn();
                        
                    } 
                    
                }
        
                /**
                 * Copies attachments to the list of email templates
                 * @param templateIds the email template ids to copy attachments to
                 * @param docIds the attachment ids to copy
                 */
                function doSubmitAsync() {
                    
                    // show the modal panel
                    showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");
                    // delay to display progress message    
                    setTimeout(function() {
                        doSubmitSync();
                    }, 500);
                                
                }
                
                /**
                 * Copies attachments to the list of email templates
                 * @param templateIds the email template ids to copy attachments to
                 * @param docIds the attachment ids to copy
                 */
                function doSubmitSync() {
                    
                    try {
                        // STEP I - initialize the call
                        initCall();
                        
                        // STEP II - submit
                        doSubmit();
                        
                    } catch(ex) {
                        // hide the modal panel
                        hideWaitDialog();
                        // display the error
                        ap_erroralert(ap_cERROR_UNKNOWN, ex);
                        // back to context object
                        doReturn();
                        
                    } 
                    
                }
            </script>
        </apex:outputPanel>
    
        <apex:outputPanel id="idApprovalContextSubmitPagePanel">
            <apex:pageBlock id="idApprovalContextSubmitPage" title="{!pageTitle}" rendered="{!pageLoaded}">
                <apex:pageMessages />
                
                <apex:pageBlockButtons location="top" >
                    <apex:outputPanel >
                        <!-- intermediate page to avoid performing DML when page loads -->
                        <apex:commandButton action="{!doSubmit}" 
                                            value="{!$Label.Apttus_Approval__Submit}" 
                                            onclick="onActionClick();"
                                            oncomplete="onActionComplete();"
                                            rendered="{!IsPageLoadStep}" 
                                            reRender="idApprovalContextSubmitPagePanel" />

                        <apex:commandButton action="{!doNext}" 
                                            value="{!$Label.Apttus_Approval__Submit}" 
                                            onclick="onActionClick();"
                                            oncomplete="onActionComplete();"
                                            rendered="{!NOT(hasErrors) && ((IsReSubmitStep && IsCancelPendingProcess) || IsAttachmentStep || IsSubmitCommentsStep)}" 
                                            reRender="idApprovalContextSubmitPagePanel" />

                        <apex:commandButton action="{!doNext}" 
                                            value="{!$Label.Apttus_Approval__Yes}" 
                                            onclick="onActionClick();"
                                            oncomplete="onActionComplete();"
                                            rendered="{!NOT(hasErrors) && IsAttachmentWarningStep && HasSubmissionComments}" 
                                            reRender="idApprovalContextSubmitPagePanel" />

                        <apex:commandButton action="{!doSubmit}" 
                                            value="{!$Label.Apttus_Approval__Yes}" 
                                            onclick="onActionClick();"
                                            oncomplete="onActionComplete();"
                                            rendered="{!NOT(hasErrors) && IsAttachmentWarningStep && NOT(HasSubmissionComments)}" 
                                            reRender="idApprovalContextSubmitPagePanel" />

                        <apex:commandButton action="{!doCancel}" 
                                            value="{!$Label.Apttus_Approval__No}" 
                                            rendered="{!NOT(hasErrors) && IsAttachmentWarningStep}" />

                        <apex:commandButton action="{!doCancel}" 
                                            value="{!$Label.Apttus_Approval__Cancel}" 
                                            rendered="{!NOT(hasErrors) && 
                                                        NOT(IsConfirmationStep) && 
                                                        NOT(IsAttachmentWarningStep) && 
                                                        NOT(IsPrepareStep)}" />

                        <apex:commandButton action="{!doCancel}" 
                                            value="{!$Label.Apttus_Approval__Return}" 
                                            rendered="{!hasErrors || IsConfirmationStep}" />

                    </apex:outputPanel>
                </apex:pageBlockButtons>

                <!-- select attachments page -->
                <apex:outputPanel >
                    <apex:pageBlockSection title="{!$Label.Apttus_Approval__SelectAttachments}" columns="1"
                                        collapsible="false" 
                                        rendered="{!IsAttachmentStep && UsingFileTypeAttachments}" >
                        <apex:pageBlockTable value="{!Attachments}" var="attachInfo" >
                            <apex:column >
                                <apex:facet name="header">{!$Label.Apttus_Approval__Select}</apex:facet>
                                <apex:inputCheckbox selected="{!attachInfo.selected}"
                                                    value="{!attachInfo.selected}" />
                            </apex:column>
                            <apex:column value="{!attachInfo.fileSO.PathOnClient}" />
                            <apex:column value="{!attachInfo.fileSO.ContentSize}" />
                            <apex:column value="{!attachInfo.fileSO.SystemModstamp}" />
                        </apex:pageBlockTable>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection title="{!$Label.Apttus_Approval__SelectAttachments}" columns="1"
                                        collapsible="false" 
                                        rendered="{!IsAttachmentStep && NOT(UsingFileTypeAttachments)}" >
                        <apex:pageBlockTable value="{!Attachments}" var="attachInfo" >
                            <apex:column >
                                <apex:facet name="header">{!$Label.Apttus_Approval__Select}</apex:facet>
                                <apex:inputCheckbox selected="{!attachInfo.selected}"
                                                    value="{!attachInfo.selected}" />
                            </apex:column>
                            <apex:column value="{!attachInfo.attachmentSO.Name}" />
                            <apex:column value="{!attachInfo.attachmentSO.BodyLength}" />
                            <apex:column value="{!attachInfo.attachmentSO.SystemModstamp}" />
                        </apex:pageBlockTable>
                    </apex:pageBlockSection>
                </apex:outputPanel>
                
                <!-- enter submission comments page -->
                <apex:outputPanel >
                    <!-- approval requests preview -->
                    <apex:pageBlockTable id="idStepLevelComments"
                                        value="{!approvals}"
                                        var="request"
                                        rendered="{!IsSubmitCommentsStep && showApprovals}">
            
                        <apex:column value="{!request.requestSO.Apttus_Approval__Step_Name__c}"/>  
                        <apex:column value="{!request.requestSO.Apttus_Approval__StepSequenceString__c}"/>
                        <apex:column value="{!request.requestSO.Apttus_Approval__Sequence__c}"/>         
                                
                        <apex:column headerValue="{!$Label.Apttus_Approval__AssignedTo}">
                            <apex:outputLink rendered="{!request.requestSO.Apttus_Approval__Assigned_To_Type__c = 'Queue'}"
                                value="{!queueURL}">{!request.requestSO.Apttus_Approval__Assigned_To_Name__c}
                                <apex:param name="id" value="{!request.requestSO.Apttus_Approval__Assigned_To_Id__c}"/>
                                <apex:param name="setupid" value="Queues"/>
                            </apex:outputLink>
                            
                            <apex:outputLink rendered="{!request.requestSO.Apttus_Approval__Assigned_To_Type__c != 'Queue'}"
                                value="/{!request.requestSO.Apttus_Approval__Assigned_To_Id__c}">
                                    {!request.requestSO.Apttus_Approval__Assigned_To_Name__c}
                            </apex:outputLink>
                        </apex:column>
                        
                        <apex:column value="{!request.requestSO.Apttus_Approval__Request_Comments__c}"/>
        
                        <!-- step level submission comments -->
                        <apex:column headerValue="{!$Label.Apttus_Approval__SubmissionComments}"
                                    rendered="{!hasStepLevelComments}">
                                    
                            <apex:pageBlockTable value="{!request.stepComments}"
                                                var="stepComment"
                                                columns="2"
                                                rendered="{!request.hasStepComments}">
                                <apex:column >
                                    <apex:facet name="header">{!$Label.Apttus_Approval__SubmissionCommentType}</apex:facet>
                                    <apex:outputText >{!$Label[stepComment.stepCommentLabel]}</apex:outputText>
                                </apex:column>
                                
                                <apex:column >
                                    <apex:facet name="header">{!$Label.Apttus_Approval__Comments}</apex:facet>
                                    <apex:inputTextArea value="{!stepComment.stepComment}"
                                                        style="width:300px;height:20px" />
                                </apex:column>
                            </apex:pageBlockTable>
                        </apex:column>
                    </apex:pageBlockTable>
                
                    <!-- process level submission comments -->
                    <apex:pageBlock title="{!$Label.Apttus_Approval__SubmissionComments}"
                                    rendered="{!IsSubmitCommentsStep && IsProcessLevelComment}">
                                    
                        <apex:pageBlockSection id="idProcessLevelComment"
                                            columns="1">
                                            
                            <apex:pageBlockSectionItem >
                                {!$Label.Apttus_Approval__SubmissionCommentEntry}
                            </apex:pageBlockSectionItem>
            
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel for="idProcessComment"
                                                value="{!$Label[submissionComments.processCommentLabel]}" />
                                <apex:outputPanel layout="block">
                                    <apex:inputTextArea id="idProcessComment"
                                                        value="{!submissionComments.processComment}"
                                                        style="width:500px;height:40px" />
                                </apex:outputPanel>
                            </apex:pageBlockSectionItem>
                        </apex:pageBlockSection>
                    </apex:pageBlock>
                </apex:outputPanel>
                
                <!-- prepare to submit with attachments (copies attachments to email templates) -->
                <apex:outputPanel >
                    <apex:outputPanel rendered="{!IsPrepareStep && HasSelectedDocIds}" >
                        <script>
                            // get the comma separated list of email template ids
                            var templateIdStr = "{!JSENCODE(EmailTemplateIdsCsv)}";
                            // get the comma separated list of selected document ids
                            var docIdStr = "{!JSENCODE(SelectedDocIdsCsv)}";
                            // show the modal panel
                            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");
                            // copy attachments
                            // delay to display progress message    
                            setTimeout(function() {
                                copyAttachmentsAsync(templateIdStr.split(","), docIdStr.split(","));
                            }, 500);
                        </script>
                    </apex:outputPanel>
                </apex:outputPanel>
    
                <!-- prepare to submit without attachments -->
                <apex:outputPanel >
                    <apex:outputPanel rendered="{!IsPrepareStep && NOT(HasSelectedDocIds)}" >
                        <script>
                            // show the modal panel
                            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");
                            // submit
                            // delay to display progress message    
                            setTimeout(function() {
                                doSubmitAsync();
                            }, 500);
                        </script>
                    </apex:outputPanel>
                </apex:outputPanel>
    
            </apex:pageBlock>
        </apex:outputPanel>
        
        <!--  Javascript functions -->
        <apex:actionFunction name="doSubmit" 
                            action="{!doSubmit}" 
                            oncomplete="hideWaitDialog();" 
                            reRender="idApprovalContextSubmitPagePanel" >
        </apex:actionFunction>      
        
        <apex:actionFunction name="doReturn" 
                            action="{!doCancel}" 
                            oncomplete="hideWaitDialog();" >
        </apex:actionFunction>      
        
        <!-- This panel represents the waiting dialog that will pop up -->
        <div id="idWaitPanel"></div>
    
        <apex:actionFunction name="launchSubmitApprovals"
                            action="{!doConfirmSubmit}"
                            oncomplete="hideWaitDialog();"
                            reRender="idApprovalContextSubmitPagePanel">
        </apex:actionFunction>

    </apex:form>
</apex:page>