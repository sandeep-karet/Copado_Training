<!-- 
    Conga Approvals
    MyApprovalsLE (Lightning Experience)
     
    @2012-2021 Conga Inc. All rights reserved.

 -->
<apex:page id="idMyApprovalsLightningPage"
           controller="Apttus_Approval.MyApprovalsController"
           showHeader="false"
           sidebar="false"
           title="{!$Label.Apttus_Approval__MyApprovals}"
           action="{!doLoadApprovals}"
           lightningStylesheets="true">

	<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
	<head>
		<apex:slds />
	</head>
	<body>

    <script type="text/javascript">
        // Theme3—Salesforce Classic 2010 user interface theme
        // Theme4d—Modern “Lightning Experience” Salesforce theme
        // Theme4u-Lightning Console theme
        // Theme4t—Salesforce mobile app theme
        var inClassicMode = "{!$User.UIThemeDisplayed == 'Theme3'}";
        var inLightningMode = "{!$User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4u'}";
        var inSf1Mode = "{!$User.UIThemeDisplayed == 'Theme4t'}";
    </script>

    <script type="text/javascript" src="/soap/ajax/55.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/55.0/apex.js"></script>

    <apex:include pageName="Apttus_Approval__ApprovalsJSLibInclude" />

	<apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQuery22, 'jquery-2.2.2.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQueryDataTables110, 'js/jquery.dataTables.min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.js')}" />
	<apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__JQueryUI112, 'jquery-ui-1.12.1.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__JQueryDataTables110, 'css/jquery.dataTables.css')}" />

    <style>
        /* hide the close box on the dialog */
        .no-close .ui-dialog-titlebar-close {
            display: none !important;
        }
        body.vf-body, body.sfdcBody, .slds-scope.vf-body, .slds-scope.sfdcBody {
            padding: 0 0 0 0 !important;
        }
        .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
            margin-top: 0px !important;
            overflow-wrap: anywhere;
        }
        .search_field {
            display: inline-block;
            /*border: none;*/
            width: 100%;
        }
        .search_field input {
            /*border: 1px inset #ccc;*/
            padding: 2px;
        }
        #search-text-input {
            border-top:thin solid  #e5e5e5;
            border-right:thin solid #e5e5e5;
            border-bottom:0;
            border-left:thin solid  #e5e5e5;
            box-shadow:0px 1px 1px 1px #e5e5e5;
            float:left;
            height:17px;
            margin:.8em 0 0 .5em;
            outline:0;
            padding:.4em 0 .4em .6em;
            width:183px;
        }
        .search_field button {
            border: none;
            background: none;
            float: right;
            margin: 0px !important;
        }
        .rich-toolbar {
            background-color: transparent !important;
            background-image: none !important;
            border: none !important;
        }
        .rich-toolbar-item {
            background-color: transparent !important;
            background-image: none !important;
            border: none !important;
        }
        .rich-tab-active-lightning {
            background-image: none !important;
            background-color: transparent !important;
            font-family: "Salesforce Sans",Arial,sans-serif !important;
            font-size: 100% !important;
        }
        .rich-tab-inactive-lightning {
            background-image: none !important;
            background-color: transparent !important;
            font-family: "Salesforce Sans",Arial,sans-serif !important;
            font-size: 100% !important;
        }
        .rich-tabpanel-content-lightning {
            background-color: transparent !important;
            border-left-width: 0 !important;
            border-right-width: 0 !important;

            border-top-width: 0px !important;
            border-top-style: none !important;
        }
        .rich-tabhdr-lightning {
            background-image: none !important;
            background-color: transparent !important;
            border-top-width: 0px !important;
            border-top-style: none !important;
        }
        /* remove tab side borders in lightning but affects classic mode as well */
        .rich-tabhdr-side-border {
            background-image: none !important;
            background-color: transparent !important;
        }
        .rich-tabhdr-side-cell {
            border-top-width: 0px !important;
            border-top-style: none !important;
        }
        .displayFieldPanel {
            overflow-wrap: anywhere;
        }
    </style>
    
    <script type="text/javascript">

        // make sure jQuery doesn't conflict with any other JS libraries
        var j$ = jQuery.noConflict();
        
        // setup namespace
        j$.APTTUS = {};
        
        // define dialog objects
        var approveDialog;
        var rejectDialog;
        var addCommentDialog;
        var addApproverDialog;
        var addApproverSearchDialog;
        var reassignApproverDialog;
        var reassignApproverSearchDialog;
        
        // define common dialog form fields
        var fldRequestId;
        var fldAssigneeType;
        var fldAssigneeName;
        var fldAssigneeId;
        var fldComment;

        // define add approver dialog form fields
        var fldMode;
        var fldStepLabel;
        var errorTips;
        var uiFormFields;

        // define search approver dialog datatable objects
        var userTable = null;
        var queueTable = null;
        var roleTable = null;
        
        // hilight table rows
        var lastRow;
        function hilightRow(elem) {
            if (lastRow != undefined) {
                lastRow.style.backgroundColor = 'white';
            }
            
            elem.style.backgroundColor = '#fecf70';
            lastRow = elem;
        }
        
        /**
         * Initializes the call
         */
        function initCall() {
        
            try {
                sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
            } catch(e) {
                ap_erroralert(ap_cERROR_UNKNOWN,e);
            }
        
        }

        /**
         * Show wait dialog
         */
        function showWaitDialog(msgText) {
            
            j$("#idWaitPanel").html('<center><img src="{!URLFOR($Resource.Apttus_Approval__Image_LoadingPage)}" /></center>');
            j$("#idWaitPanel").dialog("open");
            j$("#idWaitPanel").dialog("option" , "title" , msgText);
            j$("#idWaitPanel").dialog("option", "position", "center");
            
            return false;
            
        }
   
        /**
         * Hide the wait dialog
         */
        function hideWaitDialog() {
        
            // close the wait dialog
            j$("#idWaitPanel").dialog("close");
            return true;
            
        }
        
        // setup the wait panel and set autoOpen to false
        function buildWaitDialog() {
        
            j$("#idWaitPanel").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                closeOnEscape: false,
                draggable: false,
                width: 300,
                minHeight: 50,
                modal: true,
                buttons: {},
                resizable: false,
                open: function() {
                    // scrollbar fix for IE
                    j$('body').css('overflow','hidden');
                },
                close: function() {
                    // reset overflow
                    j$('body').css('overflow','auto');
                }
            });
            
        };

        // initialize after the document has loaded
        j$(document).ready(function() {
            
            // build the wait dialog
            buildWaitDialog();

            // initialize the approve dialog
            approveDialog = j$("#idApproveDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false
                
            });

            // initialize the reject dialog
            rejectDialog = j$("#idRejectDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false
                
            });

            // initialize the addComment dialog
            addCommentDialog = j$("#idSaveCommentDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false
                
            });

            // initialize the add approver dialog
            addApproverDialog = j$("#idAddApproverDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false,
                title: "{!$Label.Apttus_Approval__AddApprover}"
                
            });

            // initialize the add approver search dialog
            addApproverSearchDialog = j$("#idAddApproverSearchDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 800,
                draggable: true,
                modal: true,
                resizable: true,
                title: "{!$Label.Apttus_Approval__SearchApprover}"
                
            });

            // initialize the remove approver dialog
            removeApproverDialog = j$("#idRemoveApproverDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: '120',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false,
                title: "{!$Label.Apttus_Approval__RemoveApprover}"
                
            });

            // initialize the reassign approver dialog
            reassignApproverDialog = j$("#idReassignApproverDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 340,
                draggable: true,
                modal: true,
                resizable: false,
                title: "{!$Label.Apttus_Approval__ReassignApprover}"
                
            });
            
            // initialize the reassign approver search dialog
            reassignApproverSearchDialog = j$("#idReassignApproverSearchDialog").dialog({
                dialogClass: "no-close",
                autoOpen: false,
                height: 'auto',
                width: 800,
                draggable: true,
                modal: true,
                resizable: true,
                title: "{!$Label.Apttus_Approval__SearchApprover}"
                
            });

        });

        // ================================================================================
        // ADD APPROVER
        // ================================================================================

        /**
         * Show add approver dialog
         * @param requestId the ID of the approval request context object
         */
        function showAddApprover(requestId) {
            
            // store the request id in the global namespace
            j$.APTTUS.RequestId = requestId;
            
            // save the request id on the form
            j$("[id*=idAddApproverRequestId]").val(requestId);
            
            // show wait dialog
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // let the controller know we are showing the add approver dialog
            invokeShowAddApprover(requestId);

            return false;
            
        }
        
        /**
         * Callback when the show is completed
         */
        function onShowAddApproverComplete() {
        
            // hide wait dialog
            hideWaitDialog();
            
            // show add approver dialog
            j$("#idAddApproverDialog").dialog("open");
            j$("#idAddApproverDialog").dialog("option", "title", "{!$Label.Apttus_Approval__AddApprover}");
            j$("#idAddApproverDialog").dialog("option", "position", "center");
            
            return true;

        }
        
        /**
         * Hide add approver dialog
         */
        function hideAddApprover() {

            // close the dialog
            j$("#idAddApproverDialog").dialog("close");

        }

        /**
         * Close add approver dialog
         */
        function closeAddApprover() {

            // close the dialog
            hideAddApprover();
            
            // clear global namespace parameters
            j$.APTTUS.RequestId = '';
            j$.APTTUS.AssigneeType = '';
            j$.APTTUS.AssigneeName = '';
            j$.APTTUS.AssigneeId = '';
          
            // clear and reset form fields
            j$("[id*=idAddApproverMode]").val('');
            j$("[id*=idAddApproverStepLabel]").val('');
            j$("[id*=idAddApproverAssigneeType]").val('');
            j$("[id*=idAddApproverAssigneeName]").val('');
            j$("[id*=idAddApproverAssigneeId]").val('');
            j$("[id*=idAddApproverComment]").val('');
            
            // clear error fields
            if (typeof errorTips != "undefined") {
                errorTips.removeClass("ui-state-error-text");
                errorTips.text("Specify information about the approver you are adding for the selected request");

            }
            if (typeof uiFormFields != "undefined") {
                uiFormFields.removeClass("ui-state-error");
                
            }

        }

        function addError(t) {
            errorTips
                .text(t)
                .addClass("ui-state-error-text");
        }
     
        function checkLength(o, n, min, max) {
            if (o.val().length > max || o.val().length < min) {
                o.addClass("ui-state-error");
                //addError("Length of " + n + " must be between " + min + " and " + max + ".");
                return false;
                
            } else {
                return true;
            }
        }
 
        /**
         * Validate add approver form fields
         */
        function validateAddApprover() {

            // get form field values from the dialog
            var modeElem = j$("[id*=idAddApproverMode]");
            var mode = j$("[id*=idAddApproverMode]").val();
            var stepLabelElem = j$("[id*=idAddApproverStepLabel]");
            var stepLabel = j$("[id*=idAddApproverStepLabel]").val();
            var assigneeTypeElem = j$("[id*=idAddApproverAssigneeType]");
            var assigneeType = j$("[id*=idAddApproverAssigneeType]").val();
            var assigneeNameElem = j$("[id*=idAddApproverAssigneeName]");
            var assigneeName = j$("[id*=idAddApproverAssigneeName]").val();
            var assigneeIdElem = j$("[id*=idAddApproverAssigneeId]");
            var assigneeId = j$("[id*=idAddApproverAssigneeId]").val();
            var comment = j$("[id*=idAddApproverComment]").val();

            // reset errors
            errorTips = j$(".validateTips");
            errorTips.removeClass("ui-state-error-text");
            
            uiFormFields = j$([]).add(modeElem).add(stepLabelElem).add(assigneeTypeElem).add(assigneeNameElem);
            uiFormFields.removeClass("ui-state-error");

            // perform validation
            var valid = true;
            
            // check mode
            if (typeof mode == "undefined") {
                modeElem.addClass("ui-state-error");
                addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                valid = false;
                
            } else {
                if (!checkLength(modeElem, "Mode", 1, 255)) {
                    modeElem.addClass("ui-state-error");
                    addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                    valid = false;
                
                }
            }
            
            // check step label
            if (typeof stepLabel == "undefined") {
                stepLabelElem.addClass("ui-state-error");
                addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                valid = false;
                
            } else {
                if (!checkLength(stepLabelElem, "Step Label", 1, 255)) {
                    stepLabelElem.addClass("ui-state-error");
                    addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                    valid = false;
                
                }
            }
            
            // check assignee type
            if (typeof assigneeType == "undefined") {
                assigneeTypeElem.addClass("ui-state-error");
                addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                valid = false;
                
            } else {
                if (assigneeType.length < 1) {
                    assigneeTypeElem.addClass("ui-state-error");
                    addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                    valid = false;
                
                }
            }
            
            // check assignee name
            if (typeof assigneeName == "undefined") {
                assigneeNameElem.addClass("ui-state-error");
                addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                valid = false;
                
            } else {
                if (!checkLength(assigneeNameElem, "Approver Name", 1, 255)) {
                    assigneeNameElem.addClass("ui-state-error");
                    addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                    valid = false;
                
                }
                
            }
            
            return valid;

        }

        /**
         * Validate add assignee type form field
         */
        function validateAddAssigneeType() {

            // get form field values from the dialog
            var assigneeTypeElem = j$("[id*=assigneeNameId]");
            var assigneeType = j$("[id*=assigneeNameId]").val();

            // reset errors
            errorTips = j$(".validateTips");
            errorTips.removeClass("ui-state-error-text");
            
            uiFormFields = j$([]).add(assigneeTypeElem);
            uiFormFields.removeClass("ui-state-error");

            // perform validation
            var valid = true;
            
            // check assignee type
            if (typeof assigneeType == "undefined") {
                assigneeTypeElem.addClass("ui-state-error");
                addError("Please select an assignee type to search");
                valid = false;
                
            } else {
                if (assigneeType.length < 1) {
                    assigneeTypeElem.addClass("ui-state-error");
                    addError("Please select an assignee type to search");
                    valid = false;
                
                }
            }
            
            return valid;

        }

        /**
         * Validate comments form field
         * @param elementId the ID of the target comment text field
         */
        function validateComments(elementId) {

            // get form field values from the dialog
            //var commentElem = j$("[id*=idAddComment]");
            //var comment = j$("[id*=idAddComment]").val();
            var commentElem = elementId;
            var comment = elementId.val();

            // reset errors
            commentElem.removeClass("ui-state-error");

            // perform validation
            var valid = true;
            
            // check comment length
            if (typeof comment == "undefined") {
                commentElem.addClass("ui-state-error");
                valid = false;
                
            } else {
                if (comment.length < 1) {
                    commentElem.addClass("ui-state-error");
                    valid = false;
                
                }
            }
            
            return valid;

        }

        /**
         * Add an approver
         */
        function addApprover() {

            // get form field values from the dialog
            var requestId = j$("[id*=idAddApproverRequestId]").val();
            var mode = j$("[id*=idAddApproverMode]").val();
            var stepLabel = j$("[id*=idAddApproverStepLabel]").val();
            var assigneeType = j$("[id*=idAddApproverAssigneeType]").val();
            var assigneeName = j$("[id*=idAddApproverAssigneeName]").val();
            var assigneeId = j$("[id*=idAddApproverAssigneeId]").val();
            var comment = j$("[id*=idAddApproverComment]").val();

            // add the approver
            invokeDoAddApprover(requestId,
                                mode,
                                stepLabel,
                                assigneeType,
                                assigneeName,
                                assigneeId,
                                comment);
            
            // return false to allow the action to proceed
            return false;

        }

        // ================================================================================
        // REMOVE APPROVER
        // ================================================================================

        /**
         * Show remove approver dialog
         * @param requestId the ID of the approval request context object
         */
        function showRemoveApprover(requestId) {
            
            // store the request id in the global namespace
            j$.APTTUS.RequestId = requestId;
            
            // save the request id on the form
            j$("[id*=idRemoveApproverRequestId]").val(requestId);
            
            // show wait dialog
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // let the controller know we are showing the remove approver dialog
            invokeShowRemoveApprover(requestId);

            return false;
            
        }

        /**
         * Callback when the show is completed
         */
        function onShowRemoveApproverComplete() {
            
            // hide wait dialog
            hideWaitDialog();
            
            // show remove approver dialog
            j$("#idRemoveApproverDialog").dialog("open");
            j$("#idRemoveApproverDialog").dialog("option", "title", "{!$Label.Apttus_Approval__RemoveApprover}");
            j$("#idRemoveApproverDialog").dialog("option", "position", "center");
            
            return true;

        }

        /**
         * Hide remove approver dialog
         */
        function hideRemoveApprover() {

            // close the dialog
            j$("#idRemoveApproverDialog").dialog("close");

        }

        /**
         * Close remove approver dialog
         */
        function closeRemoveApprover() {

            // close the dialog
            hideRemoveApprover();
            
            // clear global namespace parameters
            j$.APTTUS.RequestId = '';
          
            // clear and reset form fields
            j$("[id*=idRemoveApproverMode]").val('');
            
            // clear error fields
            if (typeof errorTips != "undefined") {
                errorTips.removeClass("ui-state-error-text");
                errorTips.text("Specify information about the approver you are removing for the selected request");

            }
            if (typeof uiFormFields != "undefined") {
                uiFormFields.removeClass("ui-state-error");
                
            }

        }

        /**
         * remove an approver
         */
        function removeApprover() {

            // get form field values from the dialog
            var requestId = j$("[id*=idRemoveApproverRequestId]").val();
            
            // remove the approver
            invokeDoRemoveApprover(requestId);
            
            // return false to allow the action to proceed
            return false;

        }

        // ================================================================================
        // REASSIGN APPROVER
        // ================================================================================

        /**
         * Show reassign approver dialog
         * @param requestId the ID of the approval request context object
         */
        function showReassignApprover(requestId) {
            
            // store the request id in the global namespace
            j$.APTTUS.RequestId = requestId;
            
            // save the request id on the form
            j$("[id*=idReassignApproverRequestId]").val(requestId);
            
            // clear and reset form fields
            j$("[id*=idReassignApproverAssigneeType]").val('');
            j$("[id*=idReassignApproverAssigneeName]").val('');
            j$("[id*=idReassignApproverAssigneeId]").val('');
            j$("[id*=idReassignApproverComment]").val('');

            // show wait dialog
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // let the controller know we are showing the reassign approver dialog
            invokeShowReassignApprover(requestId);

            return false;
            
        }
        
        /**
         * Callback when the show is completed
         */
        function onShowReassignApproverComplete() {
        
            // hide wait dialog
            hideWaitDialog();
            
            // show reassign approver dialog
            j$("#idReassignApproverDialog").dialog("open");
            j$("#idReassignApproverDialog").dialog("option", "title", "{!$Label.Apttus_Approval__ReassignApprover}");
            j$("#idReassignApproverDialog").dialog("option", "position", "center");
            
            return true;

        }
        
        /**
         * Hide reassign approver dialog
         */
        function hideReassignApprover() {

            // close the dialog
            j$("#idReassignApproverDialog").dialog("close");

        }

        /**
         * Close reassign approver dialog
         */
        function closeReassignApprover() {

            // close the dialog
            hideReassignApprover();
            
            // clear global namespace parameters
            j$.APTTUS.RequestId = '';
            j$.APTTUS.AssigneeType = '';
            j$.APTTUS.AssigneeName = '';
            j$.APTTUS.AssigneeId = '';
          
            // clear and reset form fields
            j$("[id*=idReassignApproverAssigneeType]").val('');
            j$("[id*=idReassignApproverAssigneeName]").val('');
            j$("[id*=idReassignApproverAssigneeId]").val('');
            j$("[id*=idReassignApproverComment]").val('');
            
            // clear error fields
            if (typeof errorTips != "undefined") {
                errorTips.removeClass("ui-state-error-text");
                errorTips.text("Specify information about the approver you are adding for the selected request");

            }
            if (typeof uiFormFields != "undefined") {
                uiFormFields.removeClass("ui-state-error");
                
            }

        }

        /**
         * Validate reassign approver form fields
         */
        function validateReassignApprover() {

            // get form field values from the dialog
            var assigneeNameElem = j$("[id*=idReassignApproverAssigneeName]");
            var assigneeName = j$("[id*=idReassignApproverAssigneeName]").val();

            // reset errors
            errorTips = j$(".validateTips");
            errorTips.removeClass("ui-state-error-text");
            
            uiFormFields = j$([]).add(assigneeNameElem);
            uiFormFields.removeClass("ui-state-error");

            // perform validation
            var valid = true;
            
            // check assignee name
            if (typeof assigneeName == "undefined") {
                assigneeNameElem.addClass("ui-state-error");
                addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                valid = false;
                
            } else {
                if (!checkLength(assigneeNameElem, "Approver Name", 1, 255)) {
                    assigneeNameElem.addClass("ui-state-error");
                    addError("{!$Label.Apttus_Approval__PleaseCompleteRequiredFields}");
                    valid = false;
                
                }
                
            }
            
            return valid;

        }

        /**
         * Validate reassign assignee type form field
         */
        function validateReassignAssigneeType() {

            // get form field values from the dialog
            var assigneeTypeElem = j$("[id*=assigneeNameId]");
            var assigneeType = j$("[id*=assigneeNameId]").val();

            // reset errors
            errorTips = j$(".validateTips");
            errorTips.removeClass("ui-state-error-text");
            
            uiFormFields = j$([]).add(assigneeTypeElem);
            uiFormFields.removeClass("ui-state-error");

            // perform validation
            var valid = true;
            
            // check assignee type
            if (typeof assigneeType == "undefined") {
                assigneeTypeElem.addClass("ui-state-error");
                addError("Please select an assignee type to search");
                valid = false;
                
            } else {
                if (assigneeType.length < 1) {
                    assigneeTypeElem.addClass("ui-state-error");
                    addError("Please select an assignee type to search");
                    valid = false;
                
                }
            }
            
            return valid;

        }

        /**
         * Reassign an approval request
         */
        function reassignApprover() {

            // get form field values from the dialog
            var requestId = j$("[id*=idReassignApproverRequestId]").val();
            var assigneeType = j$("[id*=idReassignApproverAssigneeType]").val();
            var assigneeName = j$("[id*=idReassignApproverAssigneeName]").val();
            var assigneeId = j$("[id*=idReassignApproverAssigneeId]").val();
            var comment = j$("[id*=idReassignApproverComment]").val();

            // add the approver
            invokeDoReassignApprover(requestId,
                                     assigneeType,
                                     assigneeName,
                                     assigneeId,
                                     comment);
            
            // return false to allow the action to proceed
            return false;

        }

        // ================================================================================
        // SEARCH APPROVER
        // ================================================================================

        /**
         * Show add approver search dialog
         */
        function showAddApproverSearch() {

            // store form values in the global namespace
            j$.APTTUS.RequestId = j$("[id*=idAddApproverRequestId]").val();
            
            j$.APTTUS.AssigneeType = j$("[id*=idAddApproverAssigneeType]").val();
            j$.APTTUS.AssigneeName = j$("[id*=idAddApproverAssigneeName]").val();
            j$.APTTUS.AssigneeId = j$("[id*=idAddApproverAssigneeId]").val();
            
            // make sure assignee type is selected
            if (j$.APTTUS.AssigneeType != 'User' &&
                j$.APTTUS.AssigneeType != 'Queue' &&
                j$.APTTUS.AssigneeType != 'Role') {
                
                return validateAddAssigneeType();
            
            }
            
            // show wait dialog
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // let the controller know we are showing the add approver search dialog
            invokeSearchAddApprover(j$.APTTUS.RequestId, j$.APTTUS.AssigneeType, j$.APTTUS.AssigneeName);

            return false;

        }

        /**
         * Callback when the add approver name is changed
         */
        function onChangeAddApproverAssigneeName() {
        
            // clear global namespace parameters
            j$.APTTUS.AssigneeId = '';
            
            // clear and reset form fields
            j$("[id*=idAddApproverAssigneeId]").val('');
            
            return false;
        
        }

        /**
         * Callback when the search is completed
         */
        function onSearchAddApproverComplete() {
        
            // search for the assignee name text
            if (j$.APTTUS.AssigneeType == 'User') {
                userTable = j$('#idAddApproverUserTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                userTable.search(j$.APTTUS.AssigneeName).draw();
            
            } else if (j$.APTTUS.AssigneeType == 'Queue') {
                queueTable = j$('#idAddApproverQueueTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                queueTable.search(j$.APTTUS.AssigneeName).draw();
            
            } else if (j$.APTTUS.AssigneeType == 'Role') {
                roleTable = j$('#idAddApproverRoleTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                roleTable.search(j$.APTTUS.AssigneeName).draw();

            }

            // hide invoking dialog
            hideAddApprover();

            // hide wait dialog
            hideWaitDialog();

            // show add approver search dialog
            j$("#idAddApproverSearchDialog").dialog("open");
            j$("#idAddApproverSearchDialog").dialog("option", "title", "{!$Label.Apttus_Approval__SearchApprover}");
            j$("#idAddApproverSearchDialog").dialog("option", "position", "center");
            
            return true;

        }
        
        /**
         * Select an approver to add
         * @param assigneeType the type of the selected assignee
         * @param assigneeName the name of the selected assignee
         * @param assigneeId the id of the selected assignee
         */
        function selectAddApproverSearch(assigneeType, assigneeName, assigneeId) {

            // store the selected assignee info in the global namespace
            j$.APTTUS.AssigneeType = assigneeType;
            j$.APTTUS.AssigneeName = assigneeName;
            j$.APTTUS.AssigneeId = assigneeId;

            // populate selected assignee info in add approver dialog
            j$("input:text[id*=idAddApproverAssigneeName]").val(assigneeName);
            j$("input:text[id*=idAddApproverAssigneeId]").val(assigneeId);
            
            // hide the add approver search dialog
            hideAddApproverSearch();
            
            return false;
          
        }

        /**
         * Hide the add approver search dialog
         */
        function hideAddApproverSearch() {

            // hide add approver search dialog
            j$("#idAddApproverSearchDialog").dialog("close");
            
            // show add approver dialog
            j$("#idAddApproverDialog").dialog("open");
          
        }

        /**
         * Show reassign approver search dialog
         */
        function showReassignApproverSearch() {

            // store form values in the global namespace
            j$.APTTUS.RequestId = j$("[id*=idReassignApproverRequestId]").val();
            
            j$.APTTUS.AssigneeType = 'User';
            j$.APTTUS.AssigneeName = j$("[id*=idReassignApproverAssigneeName]").val();
            j$.APTTUS.AssigneeId = j$("[id*=idReassignApproverAssigneeId]").val();
            
            // show wait dialog
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // let the controller know we are showing the reassign approver search dialog
            invokeSearchReassignApprover(j$.APTTUS.RequestId, j$.APTTUS.AssigneeName);

            return false;
            
        }

        /**
         * Callback when the ressign approver name is changed
         */
        function onChangeReassignApproverAssigneeName() {
        
            // clear global namespace parameters
            j$.APTTUS.AssigneeId = '';
            
            // clear and reset form fields
            j$("[id*=idReassignApproverAssigneeId]").val('');
            
            return false;
        
        }

        /**
         * Callback when the search is completed
         */
        function onSearchReassignApproverComplete() {
        
            // search for the assignee name text
            if (j$.APTTUS.AssigneeType == 'User') {
                userTable = j$('#idReassignApproverUserTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                userTable.search(j$.APTTUS.AssigneeName).draw();
            
            } else if (j$.APTTUS.AssigneeType == 'Queue') {
                queueTable = j$('#idReassignApproverQueueTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                queueTable.search(j$.APTTUS.AssigneeName).draw();
            
            } else if (j$.APTTUS.AssigneeType == 'Role') {
                roleTable = j$('#idReassignApproverRoleTable').DataTable({
                    "retrieve": true,
                    "autoWidth": true,
                    "columnDefs": [{ "orderable": false, "targets": 0 }],
                    "order": [[1, 'asc']],
                    "processing": true,
                    "searching": false
                });
                roleTable.search(j$.APTTUS.AssigneeName).draw();

            }

            // hide invoking dialog
            hideReassignApprover();

            // hide wait dialog
            hideWaitDialog();

            // show reassign approver search dialog
            j$("#idReassignApproverSearchDialog").dialog("open");
            j$("#idReassignApproverSearchDialog").dialog("option", "title", "{!$Label.Apttus_Approval__SearchApprover}");
            j$("#idReassignApproverSearchDialog").dialog("option", "position", "center");
            
            return true;

        }
        
        /**
         * Select an approver to reassign
         * @param assigneeType the type of the selected assignee
         * @param assigneeName the name of the selected assignee
         * @param assigneeId the id of the selected assignee
         */
        function selectReassignApproverSearch(assigneeType, assigneeName, assigneeId) {

            // store the selected assignee info in the global namespace
            j$.APTTUS.AssigneeType = assigneeType;
            j$.APTTUS.AssigneeName = assigneeName;
            j$.APTTUS.AssigneeId = assigneeId;

            // populate selected assignee info in reassign approver dialog
            j$("input:text[id*=idReassignApproverAssigneeName]").val(assigneeName);
            j$("input:text[id*=idReassignApproverAssigneeId]").val(assigneeId);
            
            // hide the reassign approver search dialog
            hideReassignApproverSearch();
            
            return false;
          
        }

        /**
         * Hide the reassign approver search dialog
         */
        function hideReassignApproverSearch() {

            // hide reassign approver search dialog
            j$("#idReassignApproverSearchDialog").dialog("close");
            
            // show reassign approver dialog
            j$("#idReassignApproverDialog").dialog("open");
          
        }

        // ================================================================================
        // ACTION HANDLERS
        // ================================================================================

        /**
         * Callback when the action button is clicked
         */
        function onActionClick() {
        
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // return false to allow the action to proceed
            return false;

        }
        
        /**
         * Callback when the action is completed
         */
        function onActionComplete() {
        
            // hide the modal panel
            hideWaitDialog();
            
            return true;

        }
        
        /**
         * Callback when the add comment button is clicked
         */
        function onActionClickAddComment() {
        
            // get form comments
            j$.APTTUS.Comments = j$("[id*=idAddComment]").val();
            
            // user cannot enter blank comments
            if (!validateComments(j$("[id*=idAddComment]"))) {
                // return false to allow the action to proceed
                return false;
            }
            
            // hide the add comment dialog
            hideAddComment();
            
            // approve the request
            invokeDoAddComments(j$.APTTUS.Comments);
            
            // return false to allow the action to proceed
            return false;

        }
        
        /**
         * Callback when the save button in the add approver dialog is clicked
         */
        function onActionSaveAddApprover() {
        
            // validate form fields
            var ok = validateAddApprover();
            if (!ok) {
                // return false to allow the action to proceed
                return false;
            }
            
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // delay to allow the progress bar to be shown
            setTimeout(function() {
                try {
                    // add the approver
                    addApprover();

                } catch(ex) {
                    var hasErrors = (ex.errors != null);
                    var hasFault = (ex.faultcode != null);
                    
                    if (hasErrors) {
                        //console.log("ex.errors.message="+ex.errors.message);
                    
                    } else if (hasFault) { 
                        //console.log("ex.faultstring="+ex.faultstring);
                        
                    } else {
                        //console.log("ex.message="+ex.message);

                    }
                    
                    // display the error
                    ap_erroralert(ap_cERROR_UNKNOWN, ex);

                } finally {
                    // close the add approver dialog
                    //closeAddApprover();
                    
                    // return false to allow the action to proceed
                    return false;
                    
                }
                
            }, 500);

        }
        
        /**
         * Callback when the cancel button in the add approver dialog is clicked
         */
        function onActionCancelAddApprover() {
        
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // cancel add action
            invokeDoCancelAddApprover();

            // return false to allow the action to proceed
            return false;

        }
        
        /**
         * Callback when the confirm button in the remove approver dialog is clicked
         */
        function onActionConfirmRemoveApprover() {
        
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // delay to allow the progress bar to be shown
            setTimeout(function() {
                try {
                    // remove the approver
                    removeApprover();

                } catch(ex) {
                    var hasErrors = (ex.errors != null);
                    var hasFault = (ex.faultcode != null);
                    
                    if (hasErrors) {
                        //console.log("ex.errors.message="+ex.errors.message);
                    
                    } else if (hasFault) {
                        //console.log("ex.faultstring="+ex.faultstring);
                        
                    } else {
                        //console.log("ex.message="+ex.message);

                    }
                    
                    // display the error
                    ap_erroralert(ap_cERROR_UNKNOWN, ex);

                } finally {
                    // close the reassign approver dialog
                    //closeReassignApprover
                    
                    // return false to allow the action to proceed
                    return false;
                    
                }
                
            }, 500);

        }

        /**
         * Callback when the save button in the reassign approver dialog is clicked
         */
        function onActionSaveReassignApprover() {
        
            // validate form fields
            var ok = validateReassignApprover();
            if (!ok) {
                // return false to allow the action to proceed
                return false;
            }
            
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // delay to allow the progress bar to be shown
            setTimeout(function() {
                try {
                    // reassign the approver
                    reassignApprover();

                } catch(ex) {
                    var hasErrors = (ex.errors != null);
                    var hasFault = (ex.faultcode != null);
                    
                    if (hasErrors) {
                        //console.log("ex.errors.message="+ex.errors.message);
                    
                    } else if (hasFault) {
                        //console.log("ex.faultstring="+ex.faultstring);
                        
                    } else {
                        //console.log("ex.message="+ex.message);

                    }
                    
                    // display the error
                    ap_erroralert(ap_cERROR_UNKNOWN, ex);

                } finally {
                    // close the reassign approver dialog
                    //closeReassignApprover
                    
                    // return false to allow the action to proceed
                    return false;
                    
                }
                
            }, 500);

        }
        
        /**
         * Callback when the cancel button in the reassign approver dialog is clicked
         */
        function onActionCancelReassignApprover() {
        
            // show the modal panel
            showWaitDialog("{!$Label.Apttus_Approval__PleaseWait}");

            // cancel reassign action
            invokeDoCancelReassignApprover();

            // return false to allow the action to proceed
            return false;

        }
        
        // ================================================================================
        // ACTION ICONS
        // ================================================================================

        /**
         * Hide the ellipsis icon and show action icons
         * @param requestId the ID of the approval request context object
         * @param ellipsisIconParentDivKey the ID of the ellipsis icon parent to show
         * @param ellipsisIconDivKey the ID of the ellipsis icon to hide
         * @param actionIconDivKey the ID of the action icons to show
         */
        function showActionIcons(requestId,ellipsisIconParentDivKey,ellipsisIconDivKey,actionIconDivKey) {
            
            // store the request id in the global namespace
            j$.APTTUS.RequestId = requestId;
            
            // hide the ellipsis icon
            j$('[id="'+ellipsisIconDivKey+'"]').hide();
            
            // show the action icons
            j$('[id="'+actionIconDivKey+'"]').show();
            
            // show the parent div
            j$('[id="'+ellipsisIconParentDivKey+'"]').show();

            // return false to allow the action to proceed
            return true;
            
        }
        
        /**
         * Hide action icons and show the ellipsis icon
         * @param requestId the ID of the approval request context object
         * @param ellipsisIconParentDivKey the ID of the ellipsis icon parent to show
         * @param ellipsisIconDivKey the ID of the ellipsis icon to show
         * @param actionIconDivKey the ID of the action icons to hide
         */
        function showEllipsisIcon(requestId,ellipsisIconParentDivKey,ellipsisIconDivKey,actionIconDivKey) {
            
            // store the request id in the global namespace
            j$.APTTUS.RequestId = requestId;
            
            // hide the action icon
            j$('[id="'+actionIconDivKey+'"]').hide();
            
            // show the ellipsis icon
            j$('[id="'+ellipsisIconDivKey+'"]').show();

            // show the parent div
            j$('[id="'+ellipsisIconParentDivKey+'"]').show();

            // return false to allow the action to proceed
            return true;
            
        }
    </script>

	<div class="slds-scope">

	<apex:form id="idMyApprovalsForm" >

        <apex:outputPanel id="idDoDonePanel">
            <script type="text/javascript">
                // make sure jQuery doesn't conflict with any other JS libraries
                j$ = jQuery.noConflict();

                // call this once the page is ready
                j$(document).ready(function() {
                          
                    var pageLoaded = "{!pageLoaded}";
                    var pageURL = "{!JSENCODE(pageURL)}";
                    var siteDomain = "{!siteDomain}";
                    var inClassicMode = "{!$User.UIThemeDisplayed == 'Theme3'}";
                    var inLightningMode = "{!$User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4u'}";
                    var inSf1Mode = "{!$User.UIThemeDisplayed == 'Theme4t'}";
                    //console.log('pageLoaded='+pageLoaded+'\n'+'pageURL='+pageURL+'\n'+'inClassicMode='+inClassicMode+'\n'+'inLightningMode='+inLightningMode+'\n'+'inSf1Mode='+inSf1Mode+'\n'+"{!$User.UIThemeDisplayed}");
                    
                    if (pageLoaded == 'false') {
                        //console.log('calling launchMApprovals');
                        //launchMyApprovals(inClassicMode, inLightningMode, inSf1Mode);

                    } else {
                        //console.log('pageURL='+pageURL);
                        if (pageURL.length > 0) {
                            try {
                                if (inClassicMode == 'false') {
                                    var pos = pageURL.indexOf(siteDomain);
                                    //console.log('pos='+pos);
                                    if (pos == -1) {
                                        //console.log('sforce.one.navigateToURL...');
                                        sforce.one.navigateToURL(pageURL);
                                    } else {
                                        // strip site domain from the URL
                                        var relativePageURL = pageURL.substring(pos + siteDomain.length);
                                        //console.log('relativePageURL='+relativePageURL);
                                        sforce.one.navigateToURL(relativePageURL);
                                    }
                                }
                            }
                            catch(err) {
                            }
                        }
                    }
                    
                });
            </script>
        </apex:outputPanel>

        <apex:outputPanel id="idPagePanel" >
            <apex:outputPanel id="idPagePanelApproveRejectActions">
                <script>
					function selectTab(event) {
						try {
							// get selected tab
							var activeTab = event.id;
							j$(".gpSessionTabItem").removeClass("slds-is-active");
							j$("#"+activeTab).parent().addClass("slds-is-active");

							// hide other tabs
							j$(".gpSessionTabContent").each(function() {
								var clsName = j$(this).attr("class");
								if (clsName.indexOf("slds-show") != -1) {
									j$(this).removeClass("slds-show");
									j$(this).addClass("slds-hide");
								}
							});

							// show selected tab
							var arr = activeTab.split("__");
							var scopeId = arr[0];
							j$("#"+scopeId).removeClass("slds-hide");
							j$("#"+scopeId).addClass("slds-show");

							// let controller know
							invokeDoSelectTab(scopeId);

						}
						catch(ex) {
							console.log("ERROR: ex="+ex);

						}
						finally {
							return false;

						}

					}

					// ================================================================================
					// APPROVE, REJECT, ADD COMMENT
					// ================================================================================

					/**
					 * Show approve dialog
					 */
					function showApprove() {
						
						// make sure at least one row is selected
						var numSelectedRequests = {!numSelectedRequests};
						if (numSelectedRequests == 0) {
							alert('{!$Label.SelectAtLeastOneRow}');
							return false;

						}
						// show the dialog
						j$("#idApproveDialog").dialog("open");
						j$("#idApproveDialog").dialog("option", "title", "Approve - Add a Comment");
						j$("#idApproveDialog").dialog("option", "position", "center");
						
						return false;
						
					}
        
					/**
					 * Hide approve dialog
					 */
					function hideApprove() {

						// clear form fields
						j$("[id*=idApproveComment]").val('');

						// close the dialog
						j$("#idApproveDialog").dialog("close");

					}

					/**
					 * Show reject dialog
					 */
					function showReject() {
						
						// make sure at least one row is selected
						var numSelectedRequests = {!numSelectedRequests};
						if (numSelectedRequests == 0) {
							alert('{!$Label.SelectAtLeastOneRow}');
							return false;

						}
						// show the dialog
						j$("#idRejectDialog").dialog("open");
						j$("#idRejectDialog").dialog("option", "title", "Reject - Add a Comment");
						j$("#idRejectDialog").dialog("option", "position", "center");
						
						return false;
						
					}
					
					/**
					 * Hide reject dialog
					 */
					function hideReject() {

						// clear form fields
						j$("[id*=idRejectComment]").val('');

						// close the dialog
						j$("#idRejectDialog").dialog("close");

					}

					/**
					 * Show addComment dialog
					 */
					function showAddComment() {
						
						// make sure at least one row is selected
						var numSelectedRequests = {!numSelectedRequests};
						if (numSelectedRequests == 0) {
							alert('{!$Label.SelectAtLeastOneRow}');
							return false;

						}
						// show the dialog
						j$("#idSaveCommentDialog").dialog("open");
						j$("#idSaveCommentDialog").dialog("option", "title", "Add a Comment");
						j$("#idSaveCommentDialog").dialog("option", "position", "center");
						
						return false;
						
					}
        
					/**
					 * Hide addComment dialog
					 */
					function hideAddComment() {

						// clear form fields
						j$("[id*=idAddComment]").val('');

						// reset errors
						j$("[id*=idAddComment]").removeClass("ui-state-error-text");
						j$("[id*=idAddComment]").removeClass("ui-state-error");

						// close the dialog
						j$("#idSaveCommentDialog").dialog("close");

					}

					/**
					 * Invoke take ownership
					 */
					function doTakeOwnership() {
						
						// make sure at least one row is selected
						var numSelectedRequests = {!numSelectedRequests};
						if (numSelectedRequests == 0) {
							alert('{!$Label.SelectAtLeastOneRow}');
							return false;

						}
						// call action function to invoke controller method
						invokeDoTakeOwnership();
						
						return false;
						
					}

                    /**
                     * Callback when the approve button is clicked
                     */
                    function onActionClickApprove() {
                        
                        // get form comments
                        j$.APTTUS.Comments = j$("[id*=idApproveComment]").val();
                        
                        // enforce required comments
                        var requireComments = {!isApprovalCommentsMandatory};
                        // user cannot enter blank comments if required
                        if (requireComments && !validateComments(j$("[id*=idApproveComment]"))) {
                            // return false to allow the action to proceed
                            return false;
                        }
                        
                        // hide the approve dialog
                        hideApprove();
                        
                        // approve the request
                        var processInAsyncMode = {!processActionsInAsyncMode};
                        if (processInAsyncMode) {
                            invokeDoApproveAsync(j$.APTTUS.Comments);

                        } else {
                            invokeDoApproveSync(j$.APTTUS.Comments);

                        }
                        
                        // return false to allow the action to proceed
                        return false;

                    }

                    /**
                     * Callback when the reject button is clicked
                     */
                    function onActionClickReject() {
                    
                        // get form comments
                        j$.APTTUS.Comments = j$("[id*=idRejectComment]").val();
                        
                        // enforce required comments
                        var requireComments = {!isRejectionCommentsMandatory};
                        // user cannot enter blank comments if required
                        if (requireComments && !validateComments(j$("[id*=idRejectComment]"))) {
                            // return false to allow the action to proceed
                            return false;
                        }

                        // hide the reject dialog
                        hideReject();
                        
                        // reject the request
                        var processInAsyncMode = {!processActionsInAsyncMode};
                        if (processInAsyncMode) {
                            invokeDoRejectAsync(j$.APTTUS.Comments);

                        } else {
                            invokeDoRejectSync(j$.APTTUS.Comments);

                        }
                        
                        // return false to allow the action to proceed
                        return false;

                    }
                </script>
            </apex:outputPanel>

			<!-- page header -->
			<div class="slds-page-header slds-page-header_record-home">
				<div class="slds-page-header__row">
					<div class="slds-page-header__col-title">
						<div class="slds-media">
							<!--<div class="slds-media__figure">
								<span class="slds-icon_container slds-icon-standard-opportunity" title="{!ctxObjLabel}">
									<svg class="slds-icon slds-page-header__icon" aria-hidden="true">
										<use xlink:href="/assets/icons/standard-sprite/svg/symbols.svg#opportunity"></use>
									</svg>
									<span class="slds-assistive-text">{!ctxObjLabel}</span>
								</span>
							</div>-->
							<div class="slds-media__body">
								<div class="slds-page-header__name">
									<div class="slds-page-header__name-title">
										<h1>
											<span>{!ctxObjLabel}</span>
											<span class="slds-page-header__title slds-truncate" title="{!ctxObjName}">{!ctxObjName}</span>
										</h1>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="slds-page-header__col-actions">
						<div class="slds-page-header__controls">
							<!--<div class="slds-page-header__control">
								<button class="slds-button slds-button_neutral slds-button_stateful slds-not-selected" aria-live="assertive">
									<span class="slds-text-not-selected">
									<svg class="slds-button__icon slds-button__icon_small slds-button__icon_left" aria-hidden="true">
										<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#add"></use>
									</svg>Follow</span>
									<span class="slds-text-selected">
									<svg class="slds-button__icon slds-button__icon_small slds-button__icon_left" aria-hidden="true">
										<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#check"></use>
									</svg>Following</span>
									<span class="slds-text-selected-focus">
									<svg class="slds-button__icon slds-button__icon_small slds-button__icon_left" aria-hidden="true">
										<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#close"></use>
									</svg>Unfollow</span>
								</button>
							</div>-->
							<apex:outputPanel rendered="{!isAllApprovalsTabSelected && hasAllApprovalsTabErrors}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
									</ul>
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!isAllApprovalsTabSelected
														&& NOT(hasAllApprovalsTabErrors)
														&& allUserApprovals.size > 0
														&& NOT(doTakeActionOnEach)}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showApprove();"
													rendered="{!allApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.Approve}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showReject();"
													rendered="{!allApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.Reject}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showAddComment();"
													rendered="{!allApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.SaveComment}
											</button>
										</li>

									</ul>
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!isMyApprovalsTabSelected && hasMyApprovalsTabErrors}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
									</ul>
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!isMyApprovalsTabSelected
														&& NOT(hasMyApprovalsTabErrors)
														&& userApprovals.size > 0
														&& NOT(doTakeActionOnEach)}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showApprove();"
													rendered="{!myApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.Approve}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showReject();"
													rendered="{!myApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.Reject}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return showAddComment();"
													rendered="{!myApprovalsTabEnableActions}"
													rerender="idPagePanel">{!$Label.SaveComment}
											</button>
										</li>
										<!--<li>
											<div class="slds-dropdown-trigger slds-dropdown-trigger_click">
												<button class="slds-button slds-button_icon slds-button_icon-border-filled" aria-haspopup="true" title="More Actions">
													<svg class="slds-button__icon" aria-hidden="true">
														<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#close"></use>
														<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#down"></use>
													</svg>
													<span class="slds-assistive-text">More Actions</span>
												</button>
											</div>
										</li>-->
									</ul>
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!isQueueApprovalsTabSelected && hasQueueApprovalsTabErrors}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
									</ul>
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!isQueueApprovalsTabSelected
														&& NOT(hasQueueApprovalsTabErrors)
														&& queueRoleApprovals.size > 0
														&& NOT(doTakeActionOnEach)}">
								<div class="slds-page-header__control">
									<ul class="slds-button-group-list">
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return invokeDoDone();"
													rerender="idDoDonePanel">{!$Label.Return}
											</button>
										</li>
										<li>
											<button class="slds-button slds-button_neutral" 
													onclick="return doTakeOwnership();"
													rendered="{!hasSelectableQueueRoleApprovals}"
													rerender="idPagePanel">{!$Label.TakeOwnership}
											</button>
										</li>
									</ul>
								</div>
							</apex:outputPanel>
						</div>
					</div>
				</div>
				<div class="slds-page-header__row">
					<div class="slds-page-header__col-meta">
						<p class="slds-page-header__meta-text">{!ctxObjApprovalStatus}</p>
					</div>
				</div>
				<!--<div class="slds-page-header__row slds-page-header__row_gutters">
					<div class="slds-page-header__col-details">
						<ul class="slds-page-header__detail-row">
							<li class="slds-page-header__detail-block">
								<div class="slds-text-title slds-truncate" title="Field 1">Field 1</div>
								<div class="slds-truncate" title="Description that demonstrates truncation with a long text field.">Description that demonstrates truncation with a long text field.</div>
							</li>
							<li class="slds-page-header__detail-block">
								<div class="slds-text-title slds-truncate" title="Field 2 (3)">Field 2 (3)
									<div class="slds-dropdown-trigger slds-dropdown-trigger_click">
										<button class="slds-button slds-button_icon slds-button_icon" aria-haspopup="true" title="More Actions">
											<svg class="slds-button__icon slds-button__icon_small" aria-hidden="true">
											<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#close"></use>
											<use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#down"></use>
											</svg>
											<span class="slds-assistive-text">More Actions</span>
										</button>
									</div>
								</div>
								<div class="slds-truncate" title="Multiple Values">Multiple Values</div>
							</li>
							<li class="slds-page-header__detail-block">
								<div class="slds-text-title slds-truncate" title="Field 3">Field 3</div>
								<div class="slds-truncate" title="Hyperlink">
									<a href="#">Hyperlink</a>
								</div>
							</li>
							<li class="slds-page-header__detail-block">
								<div class="slds-text-title slds-truncate" title="Field 4">Field 4</div>
								<div class="slds-truncate" title="Description (2-line truncation—must use JS to truncate).">Description (2-line truncati...</div>
							</li>
						</ul>
					</div>
				</div>-->
			</div>

			<div class="slds-tabs_default">
				<ul class="slds-tabs_default__nav" role="tablist">
					<li class="slds-tabs_default__item gpSessionTab" title="{!$Label.AllApprovals}" role="presentation">
						<a class="slds-tabs_default__link" href="#" role="tab" tabindex="-1" aria-selected="false" aria-controls="allApprovalsTab" id="allApprovalsTab__item" onclick="return selectTab(this);">
							{!$Label.AllApprovals} ({!numAllApprovalsRequests})
						</a>
					</li>
					<li class="slds-tabs_default__item slds-is-active gpSessionTab" title="{!$Label.Apttus_Approval__MyApprovals}" role="presentation">
						<a class="slds-tabs_default__link" href="#" role="tab" tabindex="0" aria-selected="true" aria-controls="myApprovalsTab" id="myApprovalsTab__item" onclick="return selectTab(this);">
							{!$Label.Apttus_Approval__MyApprovals} ({!numUserApprovalsRequests})
						</a>
					</li>
					<li class="slds-tabs_default__item gpSessionTab" title="{!$Label.MyQueueRoleApprovals}" role="presentation">
						<a class="slds-tabs_default__link" href="#" role="tab" tabindex="-1" aria-selected="false" aria-controls="queueApprovalsTab" id="queueApprovalsTab__item" onclick="return selectTab(this);">
							{!$Label.MyQueueRoleApprovals} ({!numQueueRoleApprovalsRequests})
						</a>
					</li>
				</ul>
				<div id="allApprovalsTab" class="slds-tabs_default__content slds-hide gpSessionTabScope" role="tabpanel" aria-labelledby="allApprovalsTab__item">
					<apex:pageBlock rendered="{!isAllApprovalsTabSelected && hasAllApprovalsTabErrors}">
						<apex:pageMessages />
					</apex:pageBlock>
					<apex:outputPanel id="idAllApprovalsTabPageBlock" 
										rendered="{!isAllApprovalsTabSelected && allUserApprovals.size > 0 && NOT(doTakeActionOnEach)}">
						<apex:pageBlock id="idAllApprovalsTabSelectAllPanel">
							<apex:inputCheckbox onclick="invokeDoSelectAll();" value="{!allAllTabSelected}" label="{!$Label.Apttus_Approval__SelectUnselectAll}" title="{!$Label.Apttus_Approval__SelectUnselectAll}" />
							<apex:outputText value="{!numSelectableRequestsMsg}" />                         
						</apex:pageBlock>
						<apex:repeat value="{!allUserApprovals}" var="anApproval">
							<apex:pageBlock title="{!anApproval.stepName}">
								<apex:repeat value="{!anApproval.stepRequests}" var="stepRequest">
									<apex:outputPanel id="idAllApprovalsStepRequestHeaderDisplayField"
														layout="block"
														styleClass="headerDisplayFieldPanel" 
														rendered="{!stepRequest.headerDisplayField != null
																&& stepRequest.doRenderDisplayFields}">
										<div class="headerDisplayFieldLabel">
											<apex:outputLabel rendered="{!stepRequest.headerDisplayFieldInfo.IsLocal}"
																value="{!$ObjectType[stepRequest.ctxObjectType].fields[stepRequest.headerDisplayField].Label}"
																style="margin-bottom:0px;" />
											<apex:outputLabel rendered="{!NOT(stepRequest.headerDisplayFieldInfo.IsLocal)}"
																value="{!stepRequest.headerDisplayFieldInfo.Label}"
																style="margin-bottom:0px;" />
										</div>
										<div class="headerDisplayFieldValue">
											<apex:outputField value="{!stepRequest.ctxObject[stepRequest.headerDisplayField]}" />
										</div>
									</apex:outputPanel>
									<div class="cf">
										<apex:outputPanel id="idAllApprovalsStepRequestApprovalStatus"
															layout="block"
															style="float:left;width:15%;">
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approval Required'}">
												<span class="apttusIcon-attention aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Pending Approval'}">
												<span class="apttusIcon-clock aptColor-yellow">&nbsp;</span>
												<span class="approvalStatusValueYellow aptColor-yellow">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Notified'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approved'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Rejected'}">
												<span class="apttusIcon-cancel aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Cancelled'}">
												<span class="apttusIcon-cancel aptColor-black">&nbsp;</span>
												<span class="approvalStatusValueBlack aptColor-black">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
										</apex:outputPanel>
										<apex:outputPanel id="idAllApprovalsStepRequestDisplayFields"
															layout="block"
															style="float:left; width:85%; line-height: 1.3; margin-bottom:10px;"
															rendered="{!stepRequest.displayFieldInfo.size > 0
																	&& stepRequest.doRenderDisplayFields}">

											<apex:repeat value="{!stepRequest.displayFieldInfo}" var="fi">
												<div class="displayFieldPanel">
													<apex:outputText value="{!fi.label}:"
																		styleClass="displayFieldLabel" />&nbsp;&nbsp;
													<apex:outputField value="{!stepRequest.ctxObject[fi.name]}"
																		styleClass="displayFieldValue" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
												</div>
											</apex:repeat>
										</apex:outputPanel>
									</div>
									<apex:pageBlockTable id="idAllApprovalsStepRequestsTable"
															value="{!stepRequest.SelectApprovalRequests}"
															var="approvalReq">
										<apex:column width="3%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:inputCheckbox onclick="invokeDoSelect('{!approvalReq.request.Id}');" value="{!approvalReq.selected}" rendered="{!approvalReq.enableSelect}" />
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__StepLabel__c}" 
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<div id="{!approvalReq.ellipsisIconParentDivKey}" 
												onmouseover="return showActionIcons('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');"
												onmouseout="return showEllipsisIcon('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');">
												<div id="{!approvalReq.ellipsisIconDivKey}">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Action}"
																	title="{!$Label.Apttus_Approval__ApproverActions}"
																	alt="{!$Label.Apttus_Approval__ApproverActions}" />
													</apex:outputPanel>
												</div>
												<div id="{!approvalReq.actionIconDivKey}" style="display:none;">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:commandLink rendered="{!approvalReq.canReassignApprover}"
																			onclick="return showReassignApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Reassign}"
																		title="{!$Label.Apttus_Approval__ReassignApprover}"
																		alt="{!$Label.Apttus_Approval__ReassignApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canAddApprover}"
																			onclick="return showAddApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Add}"
																		title="{!$Label.Apttus_Approval__AddApprover}"
																		alt="{!$Label.Apttus_Approval__AddApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canRemoveApprover}"
																			onclick="return showRemoveApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Remove}"
																		title="{!$Label.Apttus_Approval__RemoveApprover}"
																		alt="{!$Label.Apttus_Approval__RemoveApprover}" />
														</apex:commandLink>
													</apex:outputPanel>
												</div>
											</div>
										</apex:column>
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__StepSequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__Sequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__Status}"></apex:outputText>
											</apex:facet>
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Approved'}"
																styleClass="approvalStatusValueGreen" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Rejected'}"
																styleClass="approvalStatusValueRed" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!NOT(approvalReq.request.Approval_Status__c == 'Approved')
																		&& NOT(approvalReq.request.Approval_Status__c == 'Rejected')}"
																style="color:black;" />
										</apex:column>
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__Assigned_To_Name__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__DelegateApproverNames__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__DelegateApprovers}"></apex:outputText>
											</apex:facet>
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__Request_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="24%" value="{!approvalReq.request.Apttus_Approval__Approver_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__ApprovalHistory}"></apex:outputText>
											</apex:facet>
										</apex:column>
									</apex:pageBlockTable>
								</apex:repeat>
								<apex:pageBlockSection id="idComments1" columns="1"
														rendered="{!anApproval.submitComment1Text != null}">
									<apex:outputLabel value="{!$Label[comment1Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!anApproval.submitComment1Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments2" columns="1"
														rendered="{!anApproval.submitComment2Text != null}">
									<apex:outputLabel value="{!$Label[comment2Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!anApproval.submitComment2Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments3" columns="1"
														rendered="{!anApproval.submitComment3Text != null}">
									<apex:outputLabel value="{!$Label[comment3Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!anApproval.submitComment3Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
							</apex:pageBlock>
						</apex:repeat>
						<apex:pageBlock title="{!$Label.Apttus_Approval__OtherApproverComments}" rendered="{!completionComments.size > 0}">
							<apex:pageBlockTable value="{!completionComments}" var="approverComments">
								<apex:column value="{!approverComments.Apttus_Approval__Actual_Approver__c}" />
								<apex:column value="{!approverComments.Apttus_Approval__StepLabel__c}" />
								<apex:column value="{!approverComments.Apttus_Approval__Approver_Comments__c}" />
							</apex:pageBlockTable>
						</apex:pageBlock>
					</apex:outputPanel>
				</div>
				<div id="myApprovalsTab" class="slds-tabs_default__content slds-show gpSessionTabScope" role="tabpanel" aria-labelledby="myApprovalsTab__item">
					<apex:pageBlock rendered="{!isMyApprovalsTabSelected  && hasMyApprovalsTabErrors}">
						<apex:pageMessages />
					</apex:pageBlock>
					<apex:outputPanel id="idMyApprovalsTabPageBlock" 
										rendered="{!isMyApprovalsTabSelected && userApprovals.size > 0 && NOT(doTakeActionOnEach)}">
						<apex:pageBlock id="idMyApprovalsTabSelectAllPanel">
							<apex:inputCheckbox onclick="invokeDoSelectAll();" value="{!allMyTabSelected}" label="{!$Label.Apttus_Approval__SelectUnselectAll}" title="{!$Label.Apttus_Approval__SelectUnselectAll}" />
							<apex:outputText value="{!numSelectableRequestsMsg}" />                         
						</apex:pageBlock>
						<apex:repeat value="{!userApprovals}" var="userApproval">
							<apex:pageBlock title="{!userApproval.stepName}">
								<apex:repeat value="{!userApproval.stepRequests}" var="stepRequest">
									<apex:outputPanel id="idMyApprovalsStepRequestHeaderDisplayField"
														layout="block"
														styleClass="headerDisplayFieldPanel" 
														rendered="{!stepRequest.headerDisplayField != null
																&& stepRequest.doRenderDisplayFields}">
										<div class="headerDisplayFieldLabel">
											<apex:outputLabel rendered="{!stepRequest.headerDisplayFieldInfo.IsLocal}"
																value="{!$ObjectType[stepRequest.ctxObjectType].fields[stepRequest.headerDisplayField].Label}"
																style="margin-bottom:0px;" />
											<apex:outputLabel rendered="{!NOT(stepRequest.headerDisplayFieldInfo.IsLocal)}"
																value="{!stepRequest.headerDisplayFieldInfo.Label}"
																style="margin-bottom:0px;" />
										</div>
										<div class="headerDisplayFieldValue">
											<apex:outputField value="{!stepRequest.ctxObject[stepRequest.headerDisplayField]}" />
										</div>
									</apex:outputPanel>
									<div class="cf">
										<apex:outputPanel id="idMyApprovalsStepRequestApprovalStatus"
															layout="block"
															style="float:left;width:15%;">
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approval Required'}">
												<span class="apttusIcon-attention aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Pending Approval'}">
												<span class="apttusIcon-clock aptColor-yellow">&nbsp;</span>
												<span class="approvalStatusValueYellow aptColor-yellow">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Notified'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approved'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Rejected'}">
												<span class="apttusIcon-cancel aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Cancelled'}">
												<span class="apttusIcon-cancel aptColor-black">&nbsp;</span>
												<span class="approvalStatusValueBlack aptColor-black">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
										</apex:outputPanel>
										<apex:outputPanel id="idMyApprovalsStepRequestDisplayFields"
															layout="block"
															style="float:left; width:85%; line-height: 1.3; margin-bottom:10px;"
															rendered="{!stepRequest.displayFieldInfo.size > 0
																	&& stepRequest.doRenderDisplayFields}">
																	
											<apex:repeat value="{!stepRequest.displayFieldInfo}" var="fi">
												<div class="displayFieldPanel">
													<apex:outputText value="{!fi.label}:"
																		styleClass="displayFieldLabel" />&nbsp;&nbsp;
													<apex:outputField value="{!stepRequest.ctxObject[fi.name]}"
																		styleClass="displayFieldValue" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
												</div>
											</apex:repeat>
										</apex:outputPanel>
									</div>
									<apex:pageBlockTable id="idMyApprovalsStepRequestsTable"
															value="{!stepRequest.SelectApprovalRequests}"
															var="approvalReq">
										<apex:column width="3%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:inputCheckbox onclick="invokeDoSelect('{!approvalReq.request.Id}');" value="{!approvalReq.selected}" rendered="{!approvalReq.enableSelect}" />
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__StepLabel__c}" 
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<div id="{!approvalReq.ellipsisIconParentDivKey}" 
												onmouseover="return showActionIcons('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');"
												onmouseout="return showEllipsisIcon('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');">
												<div id="{!approvalReq.ellipsisIconDivKey}">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Action}"
																	title="{!$Label.Apttus_Approval__ApproverActions}"
																	alt="{!$Label.Apttus_Approval__ApproverActions}" />
													</apex:outputPanel>
												</div>
												<div id="{!approvalReq.actionIconDivKey}" style="display:none;">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:commandLink rendered="{!approvalReq.canReassignApprover}"
																			onclick="return showReassignApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Reassign}"
																		title="{!$Label.Apttus_Approval__ReassignApprover}"
																		alt="{!$Label.Apttus_Approval__ReassignApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canAddApprover}"
																			onclick="return showAddApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Add}"
																		title="{!$Label.Apttus_Approval__AddApprover}"
																		alt="{!$Label.Apttus_Approval__AddApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canRemoveApprover}"
																			onclick="return showRemoveApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Remove}"
																		title="{!$Label.Apttus_Approval__RemoveApprover}"
																		alt="{!$Label.Apttus_Approval__RemoveApprover}" />
														</apex:commandLink>
													</apex:outputPanel>
												</div>
											</div>
										</apex:column>
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__StepSequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__Sequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__Status}"></apex:outputText>
											</apex:facet>
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Approved'}"
																styleClass="approvalStatusValueGreen" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Rejected'}"
																styleClass="approvalStatusValueRed" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!NOT(approvalReq.request.Approval_Status__c == 'Approved')
																		&& NOT(approvalReq.request.Approval_Status__c == 'Rejected')}"
																style="color:black;" />
										</apex:column>
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__Assigned_To_Name__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__DelegateApproverNames__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__DelegateApprovers}"></apex:outputText>
											</apex:facet>
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__Request_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="24%" value="{!approvalReq.request.Apttus_Approval__Approver_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__ApprovalHistory}"></apex:outputText>
											</apex:facet>
										</apex:column>
									</apex:pageBlockTable>
								</apex:repeat>
								<apex:pageBlockSection id="idComments1" columns="1"
														rendered="{!userApproval.submitComment1Text != null}">
									<apex:outputLabel value="{!$Label[comment1Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!userApproval.submitComment1Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments2" columns="1"
														rendered="{!userApproval.submitComment2Text != null}">
									<apex:outputLabel value="{!$Label[comment2Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!userApproval.submitComment2Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments3" columns="1"
														rendered="{!userApproval.submitComment3Text != null}">
									<apex:outputLabel value="{!$Label[comment3Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!userApproval.submitComment3Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
							</apex:pageBlock>
						</apex:repeat>
						<apex:pageBlock title="{!$Label.Apttus_Approval__OtherApproverComments}" rendered="{!completionComments.size > 0}">
							<apex:pageBlockTable value="{!completionComments}" var="approverComments">
								<apex:column value="{!approverComments.Apttus_Approval__Actual_Approver__c}" />
								<apex:column value="{!approverComments.Apttus_Approval__StepLabel__c}" />
								<apex:column value="{!approverComments.Apttus_Approval__Approver_Comments__c}" />
							</apex:pageBlockTable>
						</apex:pageBlock>
					</apex:outputPanel>
				</div>
				<div id="queueApprovalsTab" class="slds-tabs_default__content slds-hide gpSessionTabScope" role="tabpanel" aria-labelledby="queueApprovalsTab__item">
					<apex:pageBlock rendered="{!isQueueApprovalsTabSelected && hasQueueApprovalsTabErrors}">
						<apex:pageMessages />
					</apex:pageBlock>
					<apex:outputPanel id="idQueueApprovalsTabPageBlock" 
										rendered="{!isQueueApprovalsTabSelected && queueRoleApprovals.size > 0 && NOT(doTakeActionOnEach)}">
						<apex:pageBlock id="idQueueApprovalsTabSelectAllPanel">
							<apex:inputCheckbox onclick="invokeDoSelectAll();" value="{!allQueueTabSelected}" label="{!$Label.Apttus_Approval__SelectUnselectAll}" title="{!$Label.Apttus_Approval__SelectUnselectAll}" />
							<apex:outputText value="{!numSelectableRequestsMsg}" />
						</apex:pageBlock>
						<apex:repeat value="{!queueRoleApprovals}" var="qrApproval">
							<apex:pageBlock title="{!qrApproval.stepName}">
								<apex:repeat value="{!qrApproval.stepRequests}" var="stepRequest">
									<apex:outputPanel id="idQueueApprovalsStepRequestHeaderDisplayField"
														layout="block"
														styleClass="headerDisplayFieldPanel" 
														rendered="{!stepRequest.headerDisplayField != null
																&& stepRequest.doRenderDisplayFields}">
										<div class="headerDisplayFieldLabel">
											<apex:outputLabel rendered="{!stepRequest.headerDisplayFieldInfo.IsLocal}"
																value="{!$ObjectType[stepRequest.ctxObjectType].fields[stepRequest.headerDisplayField].Label}"
																style="margin-bottom:0px;" />
											<apex:outputLabel rendered="{!NOT(stepRequest.headerDisplayFieldInfo.IsLocal)}"
																value="{!stepRequest.headerDisplayFieldInfo.Label}"
																style="margin-bottom:0px;" />
										</div>
										<div class="headerDisplayFieldValue">
											<apex:outputField value="{!stepRequest.ctxObject[stepRequest.headerDisplayField]}" />
										</div>
									</apex:outputPanel>
									<div class="cf">
										<apex:outputPanel id="idQueueApprovalsStepRequestApprovalStatus"
															layout="block"
															style="float:left;width:15%;">
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approval Required'}">
												<span class="apttusIcon-attention aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Pending Approval'}">
												<span class="apttusIcon-clock aptColor-yellow">&nbsp;</span>
												<span class="approvalStatusValueYellow aptColor-yellow">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Notified'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Approved'}">
												<span class="apttusIcon-ok aptColor-green">&nbsp;</span>
												<span class="approvalStatusValueGreen aptColor-green">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Rejected'}">
												<span class="apttusIcon-cancel aptColor-red">&nbsp;</span>
												<span class="approvalStatusValueRed aptColor-red">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
											<apex:outputPanel rendered="{!stepRequest.parentApprovalStatus == 'Cancelled'}">
												<span class="apttusIcon-cancel aptColor-black">&nbsp;</span>
												<span class="approvalStatusValueBlack aptColor-black">{!stepRequest.parentApprovalStatus}</span>
											</apex:outputPanel>
										</apex:outputPanel>
										<apex:outputPanel id="idQueueApprovalsStepRequestDisplayFields"
															layout="block"
															style="float:left; width:85%; line-height: 1.3; margin-bottom:10px;"
															rendered="{!stepRequest.displayFieldInfo.size > 0
																	&& stepRequest.doRenderDisplayFields}">
																	
											<apex:repeat value="{!stepRequest.displayFieldInfo}" var="fi">
												<div class="displayFieldPanel">
													<apex:outputText value="{!fi.label}:"
																		styleClass="displayFieldLabel" />&nbsp;&nbsp;
													<apex:outputField value="{!stepRequest.ctxObject[fi.name]}"
																		styleClass="displayFieldValue" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
												</div>
											</apex:repeat>
										</apex:outputPanel>
									</div>
									<apex:pageBlockTable id="idQueueApprovalsStepRequestsTable"
															value="{!stepRequest.SelectApprovalRequests}"
															var="approvalReq">
										<apex:column width="3%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:inputCheckbox onclick="invokeDoSelect('{!approvalReq.request.Id}');" value="{!approvalReq.selected}" rendered="{!approvalReq.enableSelect}" />
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__StepLabel__c}" 
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<div id="{!approvalReq.ellipsisIconParentDivKey}" 
												onmouseover="return showActionIcons('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');"
												onmouseout="return showEllipsisIcon('{!approvalReq.request.Id}','{!approvalReq.ellipsisIconParentDivKey}','{!approvalReq.ellipsisIconDivKey}','{!approvalReq.actionIconDivKey}');">
												<div id="{!approvalReq.ellipsisIconDivKey}">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Action}"
																	title="{!$Label.Apttus_Approval__ApproverActions}"
																	alt="{!$Label.Apttus_Approval__ApproverActions}" />
													</apex:outputPanel>
												</div>
												<div id="{!approvalReq.actionIconDivKey}" style="display:none;">
													<apex:outputPanel rendered="{!approvalReq.hasActions}">
														<apex:commandLink rendered="{!approvalReq.canReassignApprover}"
																			onclick="return showReassignApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Reassign}"
																		title="{!$Label.Apttus_Approval__ReassignApprover}"
																		alt="{!$Label.Apttus_Approval__ReassignApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canAddApprover}"
																			onclick="return showAddApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Add}"
																		title="{!$Label.Apttus_Approval__AddApprover}"
																		alt="{!$Label.Apttus_Approval__AddApprover}" />
														</apex:commandLink>
														<apex:commandLink rendered="{!approvalReq.canRemoveApprover}"
																			onclick="return showRemoveApprover('{!approvalReq.request.Id}');">
															<apex:image url="{!$Resource.Apttus_Approval__Image_Approver_Remove}"
																		title="{!$Label.Apttus_Approval__RemoveApprover}"
																		alt="{!$Label.Apttus_Approval__RemoveApprover}" />
														</apex:commandLink>
													</apex:outputPanel>
												</div>
											</div>
										</apex:column>
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__StepSequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="5%" value="{!approvalReq.request.Apttus_Approval__Sequence__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" >
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__Status}"></apex:outputText>
											</apex:facet>
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Approved'}"
																styleClass="approvalStatusValueGreen" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!approvalReq.request.Apttus_Approval__Approval_Status__c == 'Rejected'}"
																styleClass="approvalStatusValueRed" />
											<apex:outputText value="{!approvalReq.request.Apttus_Approval__Approval_Status__c}" 
																rendered="{!NOT(approvalReq.request.Approval_Status__c == 'Approved')
																		&& NOT(approvalReq.request.Approval_Status__c == 'Rejected')}"
																style="color:black;" />
										</apex:column>
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__Assigned_To_Name__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="10%" value="{!approvalReq.request.Apttus_Approval__DelegateApproverNames__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__DelegateApprovers}"></apex:outputText>
											</apex:facet>
										</apex:column>
										<apex:column width="20%" value="{!approvalReq.request.Apttus_Approval__Request_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}" />
										<apex:column width="24%" value="{!approvalReq.request.Apttus_Approval__Approver_Comments__c}"
														style="{!if (approvalReq.enableSelect,'background-color:#fef5e3;','color:black')}">
											<apex:facet name="header">
												<apex:outputText value="{!$Label.Apttus_Approval__ApprovalHistory}"></apex:outputText>
											</apex:facet>
										</apex:column>
									</apex:pageBlockTable>
								</apex:repeat>
								<apex:pageBlockSection id="idComments1" columns="1"
														rendered="{!qrApproval.submitComment1Text != null}">
									<apex:outputLabel value="{!$Label[comment1Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!qrApproval.submitComment1Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments2" columns="1"
														rendered="{!qrApproval.submitComment2Text != null}">
									<apex:outputLabel value="{!$Label[comment2Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!qrApproval.submitComment2Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
								<apex:pageBlockSection id="idComments3" columns="1"
														rendered="{!qrApproval.submitComment3Text != null}">
									<apex:outputLabel value="{!$Label[comment3Label]}" style="font-weight:bold;" />
									<apex:repeat value="{!qrApproval.submitComment3Lines}" var="cLine">
										<apex:outputText value="{!cLine}" style="line-height:1.0;" />
									</apex:repeat>
								</apex:pageBlockSection>
							</apex:pageBlock>
						</apex:repeat>
					</apex:outputPanel>
				</div>
			</div>

			<apex:outputPanel id="idTakeActionOnEachPanel">
                <apex:outputPanel rendered="{!doTakeActionOnEach}">
                    <script type="text/javascript">
                        // init
                        initCall();
                        
                        // get approval requests
                        var approvalRequestList = new Array();
                        // get request action parameters
                        //var reqActionParams = "{requestActionParams}";
                    </script>   
                    
                    <apex:repeat value="{!allApprovalsTabSelectedReqIds}" var="selectedRequestId" rendered="{!isAllApprovalsTabSelected}">
                        <script type="text/javascript">
                            var approvalRequest = new Object();
                            approvalRequest.id = "{!selectedRequestId}";
                            
                            approvalRequestList.push(approvalRequest);
                        </script>   
                    </apex:repeat>
                    
                    <apex:repeat value="{!selectedReqIds}" var="selectedRequestId" rendered="{!NOT(isAllApprovalsTabSelected)}">
                        <script type="text/javascript">
                            var approvalRequest = new Object();
                            approvalRequest.id = "{!selectedRequestId}";
                            
                            approvalRequestList.push(approvalRequest);
                        </script>   
                    </apex:repeat>
                    
                    <script type="text/javascript">
                        if (approvalRequestList.length > 0) {
                        
                            // display progress window
                            onActionClick();
                                
                            // delay to allow the progress bar to be shown
                            setTimeout(function() {
                                try {
									// get count
									var currentId = "";
									var count = approvalRequestList.length;
									// get action type
									var isActionTypeApprove = "{!isActionTypeApprove}";
									var isActionTypeReject = "{!isActionTypeReject}";
									var isActionTypeAddComments = "{!isActionTypeAddComments}";

                                    // invoke action for each
                                    for (var i = 0; i < count; i++) {
                                        currentId = approvalRequestList[i].id;
                                        
                                        // take action on the request
                                        if (isActionTypeApprove == 'true') {
                                            var result = approveRequest(currentId,'{!JSENCODE(approvalComments)}');
                                        
                                        } else if (isActionTypeReject == 'true') {
                                            var result = rejectRequest(currentId,'{!JSENCODE(approvalComments)}');
                                        
                                        } else if (isActionTypeAddComments == 'true') {
                                            var result = addCommentsToRequest(currentId,'{!JSENCODE(approvalComments)}');
                                        
                                        }

                                    }
                                    
                                    // done taking action on all approval requests
                                    invokeDoTakeActionOnEachDone('');
                                    
                                } catch(ex) {
                                    var hasErrors = (ex.errors != null);
                                    var hasFault = (ex.faultcode != null);
                                    
                                    if (hasErrors) {
                                        invokeDoTakeActionOnEachDone(ex.errors.message);
                                    
                                    } else if (hasFault) {
                                        invokeDoTakeActionOnEachDone(ex.faultstring);
                                        
                                    } else {
                                        invokeDoTakeActionOnEachDone(ex.message);
                                    }
                                    
                                } finally {
                                    // hide the progress window
                                    onActionComplete();
                            
                                }
                                
                            }, 500);
                        }
                    </script>   
                    
                </apex:outputPanel>
            </apex:outputPanel>

            <apex:outputPanel >
                <script type="text/javascript">
                    /**
                     * Callback when the add approver action is completed
                     */
                    function onAddApproverComplete() {
                    
                        // hide the modal panel
                        hideWaitDialog();
                        
                        // close the add approver dialog
                        if (!{!hasDialogErrors}) {
                            closeAddApprover();
                        }
                        
                        return true;
            
                    }

                    /**
                     * Callback when the remove approver action is completed
                     */
                    function onRemoveApproverComplete() {
                    
                        // hide the modal panel
                        hideWaitDialog();
                        
                        // close the remove approver dialog
                        if (!{!hasDialogErrors}) {
                            closeRemoveApprover();
                        }
                        
                        return true;
            
                    }

                    /**
                     * Callback when the reassign approver action is completed
                     */
                    function onReassignApproverComplete() {
                    
                        // hide the modal panel
                        hideWaitDialog();
                        
                        // close the reassign approver dialog
                        if (!{!hasDialogErrors}) {
                            closeReassignApprover();
                        }
                        
                        return true;
            
                    }
                </script>
            </apex:outputPanel>     
	
		</apex:outputPanel>
		
		<!-- actions common to classic and lightning pages -->
		<!-- don't move these into MyApprovalsActionsInclude or all requests get approved instead of selected ones -->
        <apex:actionFunction name="invokeDoSelectTab" 
                             action="{!doSelectTab}"
                             reRender="idPagePanel">
            <apex:param name="tabName" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoDone"
                             action="{!doDone}"
                             reRender="idDoDonePanel"
                             status="idPleaseWaitStatus">
            <apex:param name="param1" assignTo="{!inClassicMode}" value="" />
            <apex:param name="param2" assignTo="{!inLightningMode}" value="" />
            <apex:param name="param3" assignTo="{!inSf1Mode}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoTakeOwnership" 
                             action="{!doTakeOwnership}" 
                             reRender="idPagePanel"
                             status="idPleaseWaitStatus">
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoApproveAsync" 
                             action="{!doApprove}"
                             reRender="idPagePanel">
            <apex:param name="comment" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoRejectAsync" 
                             action="{!doReject}" 
                             reRender="idPagePanel">
            <apex:param name="comment" value="" />
        </apex:actionFunction>
		<!-- including idTabPanel on rerender below grays out the whole tab area while approving -->
        <apex:actionFunction name="invokeDoApproveSync" 
                             action="{!doApprove}"
                             reRender="idTakeActionOnEachPanel">
            <apex:param name="comment" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoRejectSync" 
                             action="{!doReject}" 
                             reRender="idTakeActionOnEachPanel">
            <apex:param name="comment" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoAddComments" 
                             action="{!doAddComments}" 
                             reRender="idTakeActionOnEachPanel">
            <apex:param name="comment" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoTakeActionOnEachDone" 
                             action="{!doTakeActionOnEachDone}"
                             reRender="idPagePanel">
            <apex:param name="errMsg" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoSelect" 
                             action="{!doSelect}"
                             reRender="idPagePanelApproveRejectActions,,idAllApprovalsTabSelectAllPanel,idMyApprovalsTabSelectAllPanel,idQueueApprovalsTabSelectAllPanel"
							 status="idPleaseWaitStatus">
            <apex:param name="requestId" value="" />  
        </apex:actionFunction>
        <apex:actionFunction name="invokeDoSelectAll" 
                             action="{!doSelectAll}"
                             reRender="idPagePanel"
                             status="idPleaseWaitStatus">
        </apex:actionFunction>
        
        <apex:actionStatus id="idPleaseWaitStatus"
                           onstart="onActionClick();"
                           onstop="onActionComplete();" />
	</apex:form>
	</div>

	<apex:include pageName="Apttus_Approval__MyApprovalsActionsInclude" />
    
    <apex:include pageName="Apttus_Approval__MyApprovalsDialogsInclude" />

	</body>
	</html>
</apex:page>