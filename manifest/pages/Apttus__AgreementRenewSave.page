<!-- 
    Apttus Contract Management
    AgreementRenewSave
     
    @2009-2021 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c" 
		   extensions="Apttus.QueryParamController"  
		   showHeader="true">
	
	
	
	<script type="text/javascript" src="/soap/ajax/50.0/connection.js"></script>
	<script type="text/javascript" src="/soap/ajax/50.0/apex.js"></script>
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	<apex:include pageName="Apttus__YUILibrary" />
	<apex:includeScript value="/support/console/45.0/integration.js"/>
	
	<apex:outputPanel rendered="{!!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">

	<script>
	// Function called when the DOM is ready to create the dialog,
	// render the dialog into the document body, add our dialog skin
	// css to the body tag, and wire up the buttons on our dialog   
	YUI().use('event-base', function (Y) {
			Y.on('domready', function () {
					console.log("Once Dom Ready ");
					// build the wait panel
					YUI.force.com.showWaitPanelOverride('{!JSINHTMLENCODE($Label.LoadingPage)}',150);
					// post save
					// delay to display progress message	
					setTimeout(function() {
						// post save
						afterSave();
					
					}, 2000);

			});
	});
	</script>	
	</apex:outputPanel>
    <script type="text/javascript">
    
        /**
         * Initializes the call
         */
        function initCall() {
        
            try {
                sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
            } catch(e) {
                erroralert(cERROR_UNKNOWN,e);
                
            }
        
        }


        /**
        * Close current tab and open a record in new tab
        */
        function closeTab(returnId) {
            //First find the ID of the current tab to close it
            sforce.console.getEnclosingTabId(closeSubtab);
         }

        var closeSubtab = function closeSubtab(result) {
            //Close the tab when returnId is retrived.
            var tabId = result.id;
            sforce.console.closeTab(tabId, callback);
        };

         var callback = function callback(result) {
             if (result.error) {
                alert("Error in closing tab " + result.error);
             }
         };
   
        /**
         * method to perform navigation after action is completed
         *
         */  
        function navigateUrl (returnId) {
          // Check for navigation in Ligtning or Mobile
          if((typeof sforce != 'undefined') && (sforce != null) && (sforce.one) ) {
              // if console application, close the current tab and navigate to object
              if (sforce.console.isInConsole()) {
                  // close current tab
                  closeTab();
                  // refresh page to get focus on latest record opened
                  navigateTo("/" + returnId);
              }
              else 
                navigateTo("/" + returnId); 
               
          } else {
                   navigateTo("/" + returnId);
             }
        }
    
        /**
         * Callback invoked after an agreement renewal is saved
         */
        function afterSave() {
            
            // get parameters
            // original agreement id
            var originalId = "{!JSENCODE(originalId)}";
            // renewal agreement id
            var renewalId = "{!JSENCODE(renewalId)}";
            // return id
            var retId = "{!JSENCODE(returnId)}";
            
            try {
                // STEP I - initialize the call
                initCall();
                // STEP II - copy child objects from original agreement to the agreement renewal
                doCopyAgreementChildSObjects(originalId, renewalId, 'Renew');
                // STEP III - perform after renew tasks
                afterRenew(originalId, renewalId);
                // STEP IV - update document properties
                updateClonedAgreementDocs(renewalId);
                
            } catch(ex) {
                // hide modal panel
                YUI.force.com.hideWaitPanel();
                // display the error
                erroralert(cERROR_UNKNOWN, ex);
                
            } finally {
                // open the renewal (or return id) in view mode
                navigateUrl(retId ? retId : renewalId);
                
            }
        
        }
    
    </script>
    
    
  <apex:outputPanel rendered="{!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">
    <script>
        // post save
            // delay to display progress message    
            setTimeout(function() {
                // post save
                afterSave();
            }, 2000);
    </script>
    <apex:slds />
    <div class="slds-scope">    
    <!-- SPINNER -->
         <div id="spinner" class="slds-spinner_container" >
              <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                   <div class="slds-spinner__dot-a"></div>
                   <div class="slds-spinner__dot-b"></div>
              </div>
         </div>
    <!-- / SPINNER -->    
    </div>
  </apex:outputPanel>
</apex:page>