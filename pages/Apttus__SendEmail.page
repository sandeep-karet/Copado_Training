<!-- 
    Apttus Contract Management
    SendEmail
     
    @2016-2021 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c"
		   extensions="Apttus.SendEmailController" 
		   showHeader="true" 
		   sidebar="true" >
		   
	
	
	<script type="text/javascript" src="/soap/ajax/50.0/connection.js"></script>
	<script type="text/javascript" src="/soap/ajax/50.0/apex.js"></script>
	
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	<apex:stylesheet value="{!URLFOR($Resource.Apttus__LightningResource,'css/page-icon.css')}"/>
	<apex:include pageName="Apttus__YUILibrary" />
	<script type="text/javascript">	

		var protect = "{!protect}";
		var unprotect = "{!unprotect}";
		//var userAction = "{!userAction}";
		var emailAuthorURL = "{!JSENCODE(emailAuthorURL)}";
		var isParallelReview;
		var selectedTemplateId;
		var attachmentIds;
		var pLevel;
		
		var cPROTECTION_LEVEL_IGNORE = "Ignore";
		
		var selectRadioId = "";
		
	   	/**
		 * Initializes the call
		 */
		function initCall() {
		
			try {
				sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
			} catch(e) {
				erroralert(cERROR_UNKNOWN,e);
            	goBack(); 
            	
			}
		
		}
		
	   	/**
		 * Display progress message and create/update necessary objects for email author page.
		 */
        function doPrepareEmailTemplate(emailTemplateId, attachIds, protectionLevel) {
                        
        	if ((emailTemplateId == null) || (emailTemplateId.length == 0)) {
        		alert("Unable to locate Apttus out-of-the-box EmailTemplate (ApttusEmailTemplateForReviewSignatures).");
        		
        		return;
        		
        	} else {
				selectedTemplateId = emailTemplateId;
				
			}
			
			attachmentIds = attachIds;
			pLevel = protectionLevel;  			

            var exception = null;
           
            try { 
                
            	// show modal panel
				YUI.force.com.showWaitPanelOverride('{!JSINHTMLENCODE($Label.PreparingEmail)}', 210);
			
            	// delay to allow the progress message to show	
            	setTimeout("prepareTemplate()", 1000);

            } catch(ex) {                  
                
            	exception = ex;
            	// hide modal panel
				YUI.force.com.hideWaitPanel();
						
            	erroralert("prepareTemplate():", ex);
            	
            } finally {
                
				if (exception != null) {
                    
           			// back to agreement detail page
         			goBack();
         			
				} 
				
            }
            
		}

		/**
		 * Prepare email template
		`* - clone selected email template
		 * - clone and add selected attachments to the cloned template
		 * - apply protection if applicable
		 * - launch email author page
		 */
         function prepareTemplate() {
         	// temp email template
			var newTemplateId = null;
			// temporary object
			var tempObjectId = null;
			
            try {
            	initCall();
				
				var applyProtection = ((protect == "true" && cPROTECTION_LEVEL_IGNORE != pLevel) || unprotect == "true");
				
            	// clone email template
				newTemplateId = cloneEmailTemplate(selectedTemplateId);
				
				// associate selected attachments to the new email template					
				var strIds = new String(attachmentIds);

				// substitute new template id and request email author page
            	var tempId = newTemplateId.valueOf(0, 15);
            	var url = emailAuthorURL.replace(/__NEW_TEMPLATE_ID_16CHARS__/g, tempId);
				url = url.replace(/__STEPNUMBER__/g, '{!totalSteps}');
				url = url.replace(/__FILE_IDS__/g, strIds);
				url = url.replace(/__PROTECTION_TYPE__/g, applyProtection ? 'protect' : 'unprotect');
				url = url.replace(/__PROTECTION_LEVEL__/g, pLevel);
				
            	// hide modal panel
				YUI.force.com.hideWaitPanel();
				navigateTo(url);

            } catch(ex) {        
            	// hide modal panel
				YUI.force.com.hideWaitPanel();
           		
           		erroralert("prepareTemplate()", ex);
            	
				// delete temp email template if it was already created
				if (newTemplateId != null) {
					// invoke action on the controller
					invokeDoDeleteTempEmailTemplate(newTemplateId);
					
				}
				
				// back to agreement detail page
         		goBack();
         		
            } finally {
            	
            	// delete temp object if it was already created
				if (tempObjectId != null) {
					// invoke action on the controller
					invokeDoDeleteTempObject(tempObjectId);
					
				}
				
            }
            
        }
		
		/**
		 * Cancel the generation
		 */
		function cancel() {
			// Go back to the detail page
			goBack();
			
		}        
        
		/**
		 * Go back to the detail page
		 */
		function goBack() {
			// get the agreement id
			var agreementId = "{!agreementSO.Id}";
		
			// go back to the detail page
			navigateTo("/" + agreementId);
			
		}
    
    	function onSelectEmailTemplate(templateId) {
			            
			// show select email template wait panel
			YUI.force.com.showWaitPanelOverride('{!JSINHTMLENCODE($Label.PleaseWait)}', 110);
			
			// call the action
			invokeDoSelectEmailTemplate(""+ templateId +"");
			
		}

    </script>
    
	<apex:outputPanel rendered="{!defaultIcon}">
		<apex:sectionHeader title="{!$Label.Apttus__Agreement}" subtitle="{!Apttus__APTS_Agreement__c.Name}" />
	</apex:outputPanel>
	<apex:outputPanel rendered="{!reviewIcon}">
		<div class="bPageTitle bpageTitleExtra">
			<div class="ptBody">
				<div class="content">
					<img src="{!URLFOR($Resource.LightningResource, '/images/headericons/SendReview.png')}" class="pageIconSize" />
					<h1 class="pageType">{!$Label.SendForReview}</h1>
					<h2 class="pageDescription"> {!Apttus__APTS_Agreement__c.Name}</h2>
				</div>
			</div>
		</div>
	</apex:outputPanel>
	<apex:outputPanel rendered="{!signatureIcon}">
		<div class="bPageTitle bpageTitleExtra">
			<div class="ptBody">
				<div class="content">
					<img src="{!URLFOR($Resource.LightningResource, '/images/headericons/Signature.png')}" class="pageIconSize" />
					<h1 class="pageType">{!$Label.SendForSignatures}</h1>
					<h2 class="pageDescription"> {!Apttus__APTS_Agreement__c.Name}</h2>
				</div>
			</div>
		</div>
	</apex:outputPanel>
	<apex:outputPanel rendered="{!teamsReviewIcon}">
		<div class="bPageTitle bpageTitleExtra">
			<div class="ptBody">
				<div class="content">
					<img src="{!URLFOR($Resource.LightningResource, '/images/headericons/TeamsReview.png')}" class="pageIconSize" />
					<h1 class="pageType">{!$Label.SendToTeamReview}</h1>
					<h2 class="pageDescription"> {!Apttus__APTS_Agreement__c.Name}</h2>
				</div>
			</div>
		</div>
	</apex:outputPanel>
    
	<apex:form >
	
		<!-- hidden field(s) to be included by sf default query -->
		<apex:inputHidden value="{!Apttus__APTS_Agreement__c.Apttus__Parent_Agreement__c}"/>
		<apex:inputHidden value="{!Apttus__APTS_Agreement__c.Apttus__Status_Category__c}"/>
		<apex:inputHidden value="{!Apttus__APTS_Agreement__c.Apttus__Status__c}"/>
		<apex:inputHidden value="{!Apttus__APTS_Agreement__c.Apttus__FF_Agreement_Number__c}"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__VersionAware__c}" rendered="false" />
		
		<apex:outputPanel id="idSendEmail">
			
			<apex:outputPanel rendered="{!NOT(isInitialized)}">
		        <script>
		           // register to invoke the function after the page load
				    window.onload = function() { 
				       	// initialize the controller
				        doInit();
				        
				    };
		           
		        </script>
		    </apex:outputPanel>
		    
		    <apex:outputPanel rendered="{!isInitialized}" >
		    	
		    	<apex:pageBlock mode="edit" rendered="{!NOT(canEditAgreement)}" >
					<apex:pageMessages />
					<apex:outputText value="{!$Label.Apttus__InsufficientPrivileges}" 
									 style="font-family: Arial, Helvetica, sans-serif;font-weight: bold;font-size: 12pt;" /><p/>
					<apex:outputText value="{!$Label.Apttus__InsufficientPrivilegesDetail}" /><br/>
					<apex:pageBlockButtons location="bottom" >
						<apex:commandButton action="{!doCancel}" value="{!$Label.Apttus__Return}" immediate="true" />
					</apex:pageBlockButtons>
				</apex:pageBlock>
				
				<apex:pageBlock id="idPageBlock" 
								title="{!stepTitle}"  
								mode="edit" 
								rendered="{!canEditAgreement}" >
					
					<script>
						// render the variables to get the updated value to JS.
						emailAuthorURL = "{!JSENCODE(emailAuthorURL)}";    
						isParallelReview = "{!isParallelReview}";                                
					</script>
								
					<apex:pageMessages />
					
					<apex:pageBlockButtons location="top">
						<apex:outputPanel id="idButtonsTopPanel" >
							<apex:commandButton id="cmdButtonDoPrevious" 
												action="{!doPrevious}" 
												value="{!$Label.Apttus__Previous}"
								 				rendered="{!showPrevious}" 
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext" 
												action="{!doNext}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!NOT(showStep4) && NOT(IsLastStep)}"
								 				rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext2" 
												action="{!doNext}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!IsLastStep && SkipEmailTemplateSelection && !isTeamsReview}"
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext3" 
												action="{!loadTeamMemberSelection}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!IsLastStep && SkipEmailTemplateSelection && isTeamsReview}"
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoPrepareEmailTemplate"                                                  
												action="{!doValidateEmailTemplateSelection}" 
												value="{!$Label.Apttus__Next}"  
												rendered="{!showStep4 && NOT(SkipEmailTemplateSelection)}"
												oncomplete="doPrepareEmailTemplate('{!JSENCODE(emailTemplateId)}', '{!JSENCODE(attachmentIds)}', '{!JSENCODE(protectionLevel)}');" />
							<apex:commandButton id="cmdButtonDoCancel" 
												action="{!doCancel}" 
												value="{!$Label.Apttus__Cancel}"
								 				rerender="idPageBlock" />		
						</apex:outputPanel>									
						<b><apex:actionStatus id="waitStatus" startText="{!$Label.Apttus__Refreshing}" /></b>	
					</apex:pageBlockButtons>
		
					<apex:pageBlockButtons location="bottom">
						<apex:outputPanel id="idButtonsBottomPanel" >
							<apex:commandButton id="cmdButtonDoPrevious"  
												action="{!doPrevious}" 
												value="{!$Label.Apttus__Previous}"
												rendered="{!showPrevious}" 
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext" 
												action="{!doNext}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!NOT(showStep4) && NOT(IsLastStep)}"
								 				rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext2" 
												action="{!doNext}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!IsLastStep && SkipEmailTemplateSelection && !isTeamsReview}"
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoNext3" 
												action="{!loadTeamMemberSelection}" 
												value="{!$Label.Apttus__Next}" 
												rendered="{!IsLastStep && SkipEmailTemplateSelection && isTeamsReview}"
												rerender="idPageBlock" />
							<apex:commandButton id="cmdButtonDoPrepareEmailTemplate"  
												action="{!doValidateEmailTemplateSelection}" 
												value="{!$Label.Apttus__Next}"  
												rendered="{!showStep4 && NOT(SkipEmailTemplateSelection)}"
												oncomplete="doPrepareEmailTemplate('{!JSENCODE(emailTemplateId)}', '{!JSENCODE(attachmentIds)}', '{!JSENCODE(protectionLevel)}');" />
							<apex:commandButton id="cmdButtonDoCancel" 
												action="{!doCancel}" 
												value="{!$Label.Apttus__Cancel}"
								 				rerender="idPageBlock"/>		
						</apex:outputPanel>									
					</apex:pageBlockButtons>
					
					<!-- check and perform email authoring step -->
					<apex:outputPanel >
					  <script>
					  	// check if email authoring step
		                var isEmailAuthoringStep = "{!IsEmailAuthoringStep}";
		            	
		                if (isEmailAuthoringStep.toLowerCase() == 'true') {
		                    // prepare the template
		                    doPrepareEmailTemplate('{!JSENCODE(emailTemplateId)}', '{!JSENCODE(attachmentIds)}', '{!JSENCODE(protectionLevel)}');
		                    
		                }
                
					  </script>
					</apex:outputPanel>
				
					<apex:outputPanel id="idRelatedSelectionPanel">
						<apex:pageBlockSection id="idSelectAttachmentsFor"  
											   rendered="{!showStep2}" 
											   columns="1"  
											   collapsible="false" >
							<apex:panelGrid columns="2">
								<apex:inputCheckbox id="includeParent" 
													value="{!includeParent}" 
													rendered="{!hasParent}" />
								<apex:outputLabel value="{!$Label.Apttus__ParentAgreement}"
												  for="includeParent" 
												  rendered="{!hasParent}" />
								<apex:actionSupport event="onclick" 
													action="{!doAttachmentSearch}"
													rerender="idAttachments" 
													status="waitStatus" />
							</apex:panelGrid>
							<apex:panelGrid columns="2">
								<apex:inputCheckbox id="includeRelated" 
													value="{!includeRelated}" 
													rendered="{!hasRelated}" />
								<apex:outputLabel value="{!$Label.Apttus__RelatedAgreements}"
												  for="includeRelated" 
												  rendered="{!hasRelated}" />
								<apex:actionSupport event="onclick" 
													action="{!doAttachmentSearch}"
													rerender="idAttachments" 
													status="waitStatus" />
							</apex:panelGrid>
							<apex:panelGrid columns="2">
								<apex:inputCheckbox id="includeChildren" 
													value="{!includeChildren}"
									 				rendered="{!hasChildren}" />
								<apex:outputLabel value="{!$Label.Apttus__ChildAgreements}"
												  for="includeChildren" 
												  rendered="{!hasChildren}" />
								<apex:actionSupport event="onclick" 
													action="{!doAttachmentSearch}"
													rerender="idAttachments" 
													status="waitStatus" />
							</apex:panelGrid>
							<apex:panelGrid columns="2">
								<apex:inputCheckbox id="includeAmendRenew" 
													value="{!includeAmendRenew}"
													rendered="{!hasAmendRenew}" />
								<apex:outputLabel value="{!$Label.Apttus__AmendmentsAndRenewals}"
												  for="includeAmendRenew" 
												  rendered="{!hasAmendRenew}" />
								<apex:actionSupport event="onclick" 
													action="{!doAttachmentSearch}"
													rerender="idAttachments" 
													status="waitStatus" />
							</apex:panelGrid>
							<apex:panelGrid columns="2">
								<apex:inputCheckbox id="includeSiblings" 
													value="{!includeSiblings}"
									 				rendered="{!hasSiblings}" />
								<apex:outputLabel value="{!$Label.Apttus__SibilingAgreements}"
												  for="includeSiblings"  
												  rendered="{!hasSiblings}"/>
								<apex:actionSupport event="onclick" 
													action="{!doAttachmentSearch}"
													rerender="idAttachments" 
													status="waitStatus" />
							</apex:panelGrid>
						</apex:pageBlockSection>
					</apex:outputPanel>
					
					<apex:outputPanel id="idProtectionSelectionPanel">
						<apex:pageBlockSection id="idSelectProtection"
											   rendered="{!showStep3}" 
											   columns="2" 
											   collapsible="false" >
						    <apex:panelGrid columns="1" >
                                <apex:outputText value="{!$Label.Apttus__SendEmailDocumentsSelectedForReview} {!reviewTitle}" style="font-weight:bold"/>
                                <apex:pageBlockTable value="{!selectedAttachments}" rendered="{!showStep3}" var="attachData">                        
                                    <apex:column style="width: 70%;">    

                                        <apex:facet name="header">{!$Label.Apttus__FileName}</apex:facet>
                                        <apex:outputLink styleClass="breakWordCls" value="/{!attachData.AttachmentFileWrapper.Id}">{!attachData.AttachmentFileWrapper.Name}</apex:outputLink>
                                    </apex:column>
                                    
                                    <apex:column >
                                        <apex:facet name="header">{!$ObjectType.Attachment.Fields.LastModifiedDate.Label}</apex:facet>
                                        <apex:outputText value="{!attachData.AttachmentFileWrapper.LastModifiedDate}" />
                                    </apex:column>
                                </apex:pageBlockTable>
                            </apex:panelGrid>
							
					        <apex:panelGrid columns="1" >
								<apex:outputText value="{!$Label.Apttus__SendEmailPermissionsLevelForReviewDocuments}" style="font-weight:bold"/>
					            <apex:selectRadio value="{!protectionLevel}" layout="pageDirection">
					                <apex:selectOptions value="{!protectionLevels}"/>
					            </apex:selectRadio>
					        </apex:panelGrid>
				        </apex:pageBlockSection>
				    </apex:outputPanel>
				    
				    <apex:outputPanel id="idAttachmentsPanel">
						<apex:pageBlockSection id="idAttachments" 
											   rendered="{!showAttachments}"  
											   title="{!$ObjectType.Attachment.LabelPlural}" 
											   columns="1" 
											   collapsible="false">
							<apex:pageBlockTable value="{!attachments}" 
												 var="attachData"
												 width="100%" >
								<apex:column >
									<apex:facet name="header">{!$Label.Apttus__Select}</apex:facet>
									<apex:inputCheckbox selected="{!attachData.selected}"
														value="{!attachData.selected}" />
								</apex:column>
								<apex:column >
									<apex:facet name="header">{!$Label.Apttus__FileName}</apex:facet>
									<apex:outputLink value="/{!attachData.AttachmentFileWrapper.Id}">{!attachData.AttachmentFileWrapper.Name}</apex:outputLink>
								</apex:column>
								<apex:column >
									<apex:facet name="header">{!$Label.Apttus__AgreementName}</apex:facet>
									<apex:outputLink value="/{!attachData.agmt.Id}">{!attachData.agmt.Name}</apex:outputLink>
								</apex:column>agmtAssociationType
								<apex:column >
									<apex:facet name="header">{!$Label.Apttus__Relationship}</apex:facet>
									<apex:outputText value="{!attachData.agmtAssociationType}" />
                                </apex:column>								
                                <apex:column >
									<apex:facet name="header">{!$Label.Apttus__DocumentType}</apex:facet>
									<apex:outputText value="{!attachData.AttachmentFileWrapper.DocumentType}" />
								</apex:column>
								<apex:column >
									<apex:facet name="header">{!$Label.Apttus__Size}</apex:facet>
									<apex:outputText value="{!attachData.AttachmentFileWrapper.BodyLength}" />
								</apex:column>
								<apex:column >
									<apex:facet name="header">{!$ObjectType.Attachment.Fields.LastModifiedDate.Label}</apex:facet>
									<apex:outputText value="{!attachData.AttachmentFileWrapper.LastModifiedDate}" />
								</apex:column>
							</apex:pageBlockTable>
						</apex:pageBlockSection>
					</apex:outputPanel>
									
					<apex:outputpanel id="idFolderSelectionPanel">
						<apex:pageBlockSection id="idSelectFolder" rendered="{!showStep4}" columns="1">	
							<!--<apex:outputText value="{!$Label.SelectEmailTemplateFolderInstruction1}"/>
							<apex:outputText value="{!$Label.SelectEmailTemplateFolderInstruction2}"/> --> <br/><p/><p/>
							<apex:panelGrid columns="1">
								<apex:panelGroup >
									<b><apex:outputLabel value="{!$Label.Apttus__Folder}" for="idFolders" /></b>&nbsp;
									<apex:selectList id="idFolders" 
													 value="{!folderId}" 
													 size="1"  
													 onchange="invokeDoEmailTemplateSearch();">
										<apex:selectOptions value="{!folders}" />
									</apex:selectList>
								</apex:panelGroup>
							</apex:panelGrid>
						</apex:pageBlockSection>	
					</apex:outputpanel>
			 		<p/>	
					<apex:outputPanel id="idTemplatesPanel">
						<apex:pageBlockSection columns="1"  
											   title="{!$Label.Apttus__Templates}" 
											   rendered="{!showTemplates}" 
											   collapsible="false">
							<apex:pageBlockTable id="idTemplateTable"
												 value="{!templates}" 
												 var="templateData"
												 width="100%" >
								<apex:column headervalue="Select">
									<apex:outputPanel rendered="{!templateData.selected}">
										<input type="radio" 
											   checked="true"											   
                                               onclick="onSelectEmailTemplate('{!templateData.emailTemplate.Id}')">
										</input>                                    	
									</apex:outputPanel>
									<apex:outputPanel rendered="{!NOT(templateData.selected)}">
										<input type="radio"
											   onclick="onSelectEmailTemplate('{!templateData.emailTemplate.Id}')">
										</input>                                		
									</apex:outputPanel>
								</apex:column>
								<apex:column >
									<apex:facet name="header">
										<apex:commandLink action="{!doSort}" 
														  value="{!$Label.Apttus__Name}"
														  reRender="idTemplateTable" 
														  status="waitStatus">
											<apex:outputPanel rendered="{!isSortByName}">
												<img src="{!sortImageURL}" title="{!sortImageTitle}" />
											</apex:outputPanel>
											<apex:param name="sortBy" value="Name" />
										</apex:commandLink>
									</apex:facet>
									<apex:outputField value="{!templateData.emailTemplate.Name}" />
									<!-- apex:outputLink value="/{!templateData.emailTemplate.Id}">{!templateData.emailTemplate.Name}</apex:outputLink -->
								</apex:column>
								<apex:column >
									<apex:facet name="header">
										<apex:commandLink action="{!doSort}" 
														  value="{!$Label.Apttus__TemplateType}"
														  reRender="idTemplateTable" 
														  status="waitStatus">
											<apex:outputPanel rendered="{!isSortByTemplateType}">
												<img src="{!sortImageURL}" title="{!sortImageTitle}" />
											</apex:outputPanel>
											<apex:param name="sortBy" value="TemplateType" />
										</apex:commandLink>
									</apex:facet>
									<apex:outputField value="{!templateData.emailTemplate.TemplateType}" />
								</apex:column>
								<apex:column >
									<apex:facet name="header">
										<apex:commandLink action="{!doSort}" 
														  value="{!$Label.Apttus__Description}"
														  reRender="idTemplateTable" 
														  status="waitStatus">
											<apex:outputPanel rendered="{!isSortByDescription}">
												<img src="{!sortImageURL}" title="{!sortImageTitle}" />
											</apex:outputPanel>
											<apex:param name="sortBy" value="Description" />
										</apex:commandLink>
									</apex:facet>
									<apex:outputField value="{!templateData.emailTemplate.Description}" />
								</apex:column>						
							</apex:pageBlockTable>
						</apex:pageBlockSection>				
					</apex:outputPanel>
					
				</apex:pageBlock>
				
			</apex:outputPanel>
			
		</apex:outputPanel>
		
		<apex:actionFunction name="doInit" 
    						 action="{!doInit}" 
    						 reRender="idSendEmail" />  	
    						 
		<apex:actionFunction name="invokeDoEmailTemplateSearch"  
							 action="{!doEmailTemplateSearch}" 
							 status="waitStatus"
				 			 reRender="idTemplateTable, idButtonsTopPanel, idButtonsBottomPanel" />
				 
    	<apex:actionFunction name="invokeDoSelectEmailTemplate" 
    						 action="{!doSelectEmailTemplate}" 
    						 reRender="idTemplateTable, idButtonsTopPanel, idButtonsBottomPanel"
                             oncomplete="YUI.force.com.hideWaitPanel();">
        	<apex:param name="param" assignTo="{!emailTemplateId}" value="" />
     	</apex:actionFunction>   
     	
    	<apex:actionFunction name="invokeDoDeleteTempEmailTemplate" 
    						 action="{!doDeleteTempEmailTemplate}" 
    						 reRender="dummy"> 
        	<apex:param name="param" assignTo="{!tempEmailTemplateId}" value="" />
     	</apex:actionFunction>    	
		
		<apex:actionFunction name="invokeDoDeleteTempObject" 
							 action="{!doDeleteTempObject}" 
							 reRender="dummy"> 
        	<apex:param name="param" assignTo="{!tempObjectId}" value="" />
     	</apex:actionFunction>    	
     	
	</apex:form>
	
</apex:page>